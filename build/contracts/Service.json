{
  "contractName": "Service",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDoctorInfo",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPatientInfo",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        },
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "signupDoctor",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_age",
          "type": "uint8"
        }
      ],
      "name": "signupPatient",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        },
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "testFile",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "testService",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_patient",
          "type": "address"
        }
      ],
      "name": "getPatientInfoForDoctor",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_doctor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_patient",
          "type": "address"
        }
      ],
      "name": "grantDoctorAccess",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDoctorInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPatientInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_patient\",\"type\":\"address\"}],\"name\":\"getPatientInfoForDoctor\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_doctor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_patient\",\"type\":\"address\"}],\"name\":\"grantDoctorAccess\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"signupDoctor\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_age\",\"type\":\"uint8\"}],\"name\":\"signupPatient\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"testFile\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"testService\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Service.sol\":\"Service\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Doctor.sol\":{\"keccak256\":\"0x45e320a0d922ef9f4a1ef237510c04c55181aa94e8af2fdecdab910f9c58f6af\",\"urls\":[\"bzz-raw://fcbc7392fd0281644b44d8487f1681c328bbb9d63f979c802e0dee15d6bcacdf\",\"dweb:/ipfs/QmdirZnTJpazmD1WoetVzY61PRLHDTWqajJWTWns5N3AcD\"]},\"project:/contracts/File.sol\":{\"keccak256\":\"0x4252480cc0304925d402c3f71428056395f064c38177ca0786e6097ee067dd84\",\"urls\":[\"bzz-raw://5587bbf0b05448c012ba6a9483175e373ec26521b8e1c43ecd1286ab43ce2c16\",\"dweb:/ipfs/QmUULz3oRGhjgr31XANDZbLwrYE9kwofUTd7PF2g8eT8QX\"]},\"project:/contracts/Patient.sol\":{\"keccak256\":\"0x95f149a09338b143abc035488bf5ca2abaf0eb78d69483ef391949dac63e8241\",\"urls\":[\"bzz-raw://9a64cd8eb4a349b1c87bf6c7eac7650736fea01ca31623c2e92834b18893485a\",\"dweb:/ipfs/QmcB5xJ8cJkYZxNPqhTSD6qkFWRwt1RaF9Q7PS6UDdDoQ5\"]},\"project:/contracts/Service.sol\":{\"keccak256\":\"0x6a105f51e7093ae48eef795548c41cc6332f1ee4ff46cdb99fc9661b14cda8ad\",\"urls\":[\"bzz-raw://ca0b68f95855962b805377d3e53af781049a306ed324bf103eb63694f3cd2426\",\"dweb:/ipfs/QmWM2kRHNhuBpYu7wt9omzsGzEWfiuW3fDFAyWgzMhdYCg\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5033600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613260806100616000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638b35bb881161005b5780638b35bb88146105d1578063b380f5c61461061b578063cfb33026146106e6578063fe59cc1a1461081d57610088565b8063326df6641461008d5780636459d52f146101ad5780636550aa531461035c5780637120203a146103c0575b600080fd5b610095610962565b60405180806020018560ff1660ff1681526020018060200180602001848103845288818151815260200191508051906020019080838360005b838110156100e95780820151818401526020810190506100ce565b50505050905090810190601f1680156101165780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019060200280838360005b83811015610152578082015181840152602081019050610137565b50505050905001848103825285818151815260200191508051906020019060200280838360005b83811015610194578082015181840152602081019050610179565b5050505090500197505050505050505060405180910390f35b610266600480360360208110156101c357600080fd5b81019080803590602001906401000000008111156101e057600080fd5b8201836020820111156101f257600080fd5b8035906020019184600183028401116401000000008311171561021457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610e73565b60405180806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001838103835286818151815260200191508051906020019080838360005b838110156102dc5780820151818401526020810190506102c1565b50505050905090810190601f1680156103095780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019060200280838360005b8381101561034557808201518184015260208101905061032a565b505050509050019550505050505060405180910390f35b6103be6004803603604081101561037257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611457565b005b610486600480360360408110156103d657600080fd5b81019080803590602001906401000000008111156103f357600080fd5b82018360208201111561040557600080fd5b8035906020019184600183028401116401000000008311171561042757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff169060200190929190505050611b68565b60405180806020018660ff1660ff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200180602001848103845289818151815260200191508051906020019080838360005b8381101561050c5780820151818401526020810190506104f1565b50505050905090810190601f1680156105395780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019060200280838360005b8381101561057557808201518184015260208101905061055a565b50505050905001848103825285818151815260200191508051906020019060200280838360005b838110156105b757808201518184015260208101905061059c565b505050509050019850505050505050505060405180910390f35b6105d961234f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610623612357565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b8381101561066757808201518184015260208101905061064c565b50505050905090810190601f1680156106945780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019060200280838360005b838110156106d05780820151818401526020810190506106b5565b5050505090500194505050505060405180910390f35b6106ee612765565b60405180806020018060200180602001848103845287818151815260200191508051906020019080838360005b8381101561073657808201518184015260208101905061071b565b50505050905090810190601f1680156107635780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b8381101561079c578082015181840152602081019050610781565b50505050905090810190601f1680156107c95780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019060200280838360005b838110156108055780820151818401526020810190506107ea565b50505050905001965050505050505060405180910390f35b61085f6004803603602081101561083357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612817565b60405180806020018560ff1660ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001838103835287818151815260200191508051906020019080838360005b838110156108e15780820151818401526020810190506108c6565b50505050905090810190601f16801561090e5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019060200280838360005b8381101561094a57808201518184015260208101905061092f565b50505050905001965050505050505060405180910390f35b6060600060608033610972612fc8565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a555780601f10610a2a57610100808354040283529160200191610a55565b820191906000526020600020905b815481529060010190602001808311610a3857829003601f168201915b505050505081526020016001820160009054906101000a900460ff1660ff1660ff1681526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805480602002602001604051908101604052809291908181526020018280548015610b2057602002820191906000526020600020905b815481526020019060010190808311610b0c575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020018280548015610bae57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610b64575b5050505050815250509050600073ffffffffffffffffffffffffffffffffffffffff16816040015173ffffffffffffffffffffffffffffffffffffffff1611610bf657600080fd5b610bfe612fc8565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ce15780601f10610cb657610100808354040283529160200191610ce1565b820191906000526020600020905b815481529060010190602001808311610cc457829003601f168201915b505050505081526020016001820160009054906101000a900460ff1660ff1660ff1681526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805480602002602001604051908101604052809291908181526020018280548015610dac57602002820191906000526020600020905b815481526020019060010190808311610d98575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020018280548015610e3a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610df0575b50505050508152505090508060000151816020015182606001518360800151839350819150809050965096509650965050505090919293565b606060006060610e81613010565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f635780601f10610f3857610100808354040283529160200191610f63565b820191906000526020600020905b815481529060010190602001808311610f4657829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180548060200260200160405190810160405280929190818152602001828054801561104757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610ffd575b50505050508152505090506040518060000190506040518091039020856040516020018082805190602001908083835b6020831061109a5780518252602082019150602081019050602083039250611077565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012014156110e057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16111561111e57600080fd5b60405180606001604052808681526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600060405190808252806020026020018201604052801561117b5781602001602082028038833980820191505090505b508152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906111d9929190613047565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201908051906020019061123d9291906130c7565b509050506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201828054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113ba5780601f1061138f576101008083540402835291602001916113ba565b820191906000526020600020905b81548152906001019060200180831161139d57829003601f168201915b505050505092508080548060200260200160405190810160405280929190818152602001828054801561144257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116113f8575b50505050509050935093509350509193909250565b33611460612fc8565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115435780601f1061151857610100808354040283529160200191611543565b820191906000526020600020905b81548152906001019060200180831161152657829003601f168201915b505050505081526020016001820160009054906101000a900460ff1660ff1660ff1681526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180548060200260200160405190810160405280929190818152602001828054801561160e57602002820191906000526020600020905b8154815260200190600101908083116115fa575b505050505081526020016003820180548060200260200160405190810160405280929190818152602001828054801561169c57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611652575b5050505050815250509050600073ffffffffffffffffffffffffffffffffffffffff16816040015173ffffffffffffffffffffffffffffffffffffffff16116116e457600080fd5b336116ed613010565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117cf5780601f106117a4576101008083540402835291602001916117cf565b820191906000526020600020905b8154815290600101906020018083116117b257829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054806020026020016040519081016040528092919081815260200182805480156118b357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611869575b5050505050815250509050600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16116118fb57600080fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410611a0957600080fd5b6000826003018990806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816002013390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050505050505050565b6060600080606080611b78612fc8565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c5b5780601f10611c3057610100808354040283529160200191611c5b565b820191906000526020600020905b815481529060010190602001808311611c3e57829003601f168201915b505050505081526020016001820160009054906101000a900460ff1660ff1660ff1681526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805480602002602001604051908101604052809291908181526020018280548015611d2657602002820191906000526020600020905b815481526020019060010190808311611d12575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020018280548015611db457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611d6a575b5050505050815250509050600073ffffffffffffffffffffffffffffffffffffffff16816040015173ffffffffffffffffffffffffffffffffffffffff161115611dfd57600080fd5b6040518060000190506040518091039020886040516020018082805190602001908083835b60208310611e455780518252602082019150602081019050602083039250611e22565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001201415611e8b57600080fd5b60008760ff16118015611ea1575060788760ff16105b611eaa57600080fd5b6040518060a001604052808981526020018860ff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020016000604051908082528060200260200182016040528015611f105781602001602082028038833980820191505090505b5081526020016000604051908082528060200260200182016040528015611f465781602001602082028038833980820191505090505b50815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190611fa5929190613047565b5060208201518160010160006101000a81548160ff021916908360ff16021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600201908051906020019061202a929190613151565b5060808201518160030190805190602001906120479291906130c7565b50905050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301848054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122595780601f1061222e57610100808354040283529160200191612259565b820191906000526020600020905b81548152906001019060200180831161223c57829003601f168201915b50505050509450818054806020026020016040519081016040528092919081815260200182805480156122ab57602002820191906000526020600020905b815481526020019060010190808311612297575b505050505091508080548060200260200160405190810160405280929190818152602001828054801561233357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116122e9575b5050505050905095509550955095509550509295509295909350565b600033905090565b60608033612363613010565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124455780601f1061241a57610100808354040283529160200191612445565b820191906000526020600020905b81548152906001019060200180831161242857829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180548060200260200160405190810160405280929190818152602001828054801561252957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116124df575b5050505050815250509050600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff161161257157600080fd5b612579613010565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561265b5780601f106126305761010080835404028352916020019161265b565b820191906000526020600020905b81548152906001019060200180831161263e57829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180548060200260200160405190810160405280929190818152602001828054801561273f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116126f5575b505050505081525050905080600001518160400151819150809050945094505050509091565b6060806060600060405190808252806020026020018201604052801561279a5781602001602082028038833980820191505090505b506040518060400160405280600c81526020017f626c6f6f64207465737420310000000000000000000000000000000000000000815250906040518060400160405280600a81526020017f626c6f6f6420746573740000000000000000000000000000000000000000000081525090809050925092509250909192565b6060600080606084612827612fc8565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561290a5780601f106128df5761010080835404028352916020019161290a565b820191906000526020600020905b8154815290600101906020018083116128ed57829003601f168201915b505050505081526020016001820160009054906101000a900460ff1660ff1660ff1681526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054806020026020016040519081016040528092919081815260200182805480156129d557602002820191906000526020600020905b8154815260200190600101908083116129c1575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020018280548015612a6357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612a19575b5050505050815250509050600073ffffffffffffffffffffffffffffffffffffffff16816040015173ffffffffffffffffffffffffffffffffffffffff1611612aab57600080fd5b33612ab4613010565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612b965780601f10612b6b57610100808354040283529160200191612b96565b820191906000526020600020905b815481529060010190602001808311612b7957829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805480602002602001604051908101604052809291908181526020018280548015612c7a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612c30575b5050505050815250509050600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff1611612cc257600080fd5b612cca612fc8565b600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612dad5780601f10612d8257610100808354040283529160200191612dad565b820191906000526020600020905b815481529060010190602001808311612d9057829003601f168201915b505050505081526020016001820160009054906101000a900460ff1660ff1660ff1681526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805480602002602001604051908101604052809291908181526020018280548015612e7857602002820191906000526020600020905b815481526020019060010190808311612e64575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020018280548015612f0657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612ebc575b50505050508152505090506000600360008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411612f9a57600080fd5b8060000151816020015182604001518360600151839350809050985098509850985050505050509193509193565b6040518060a0016040528060608152602001600060ff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081525090565b604051806060016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061308857805160ff19168380011785556130b6565b828001600101855582156130b6579182015b828111156130b557825182559160200191906001019061309a565b5b5090506130c3919061319e565b5090565b828054828255906000526020600020908101928215613140579160200282015b8281111561313f5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906130e7565b5b50905061314d91906131c3565b5090565b82805482825590600052602060002090810192821561318d579160200282015b8281111561318c578251825591602001919060010190613171565b5b50905061319a9190613206565b5090565b6131c091905b808211156131bc5760008160009055506001016131a4565b5090565b90565b61320391905b808211156131ff57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055506001016131c9565b5090565b90565b61322891905b8082111561322457600081600090555060010161320c565b5090565b9056fea265627a7a72315820fc1bfc711b65f4b7259700db10de91b4899a0bad7de28212d7bb80592421214764736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c80638b35bb881161005b5780638b35bb88146105d1578063b380f5c61461061b578063cfb33026146106e6578063fe59cc1a1461081d57610088565b8063326df6641461008d5780636459d52f146101ad5780636550aa531461035c5780637120203a146103c0575b600080fd5b610095610962565b60405180806020018560ff1660ff1681526020018060200180602001848103845288818151815260200191508051906020019080838360005b838110156100e95780820151818401526020810190506100ce565b50505050905090810190601f1680156101165780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019060200280838360005b83811015610152578082015181840152602081019050610137565b50505050905001848103825285818151815260200191508051906020019060200280838360005b83811015610194578082015181840152602081019050610179565b5050505090500197505050505050505060405180910390f35b610266600480360360208110156101c357600080fd5b81019080803590602001906401000000008111156101e057600080fd5b8201836020820111156101f257600080fd5b8035906020019184600183028401116401000000008311171561021457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610e73565b60405180806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001838103835286818151815260200191508051906020019080838360005b838110156102dc5780820151818401526020810190506102c1565b50505050905090810190601f1680156103095780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019060200280838360005b8381101561034557808201518184015260208101905061032a565b505050509050019550505050505060405180910390f35b6103be6004803603604081101561037257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611457565b005b610486600480360360408110156103d657600080fd5b81019080803590602001906401000000008111156103f357600080fd5b82018360208201111561040557600080fd5b8035906020019184600183028401116401000000008311171561042757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff169060200190929190505050611b68565b60405180806020018660ff1660ff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200180602001848103845289818151815260200191508051906020019080838360005b8381101561050c5780820151818401526020810190506104f1565b50505050905090810190601f1680156105395780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019060200280838360005b8381101561057557808201518184015260208101905061055a565b50505050905001848103825285818151815260200191508051906020019060200280838360005b838110156105b757808201518184015260208101905061059c565b505050509050019850505050505050505060405180910390f35b6105d961234f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610623612357565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b8381101561066757808201518184015260208101905061064c565b50505050905090810190601f1680156106945780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019060200280838360005b838110156106d05780820151818401526020810190506106b5565b5050505090500194505050505060405180910390f35b6106ee612765565b60405180806020018060200180602001848103845287818151815260200191508051906020019080838360005b8381101561073657808201518184015260208101905061071b565b50505050905090810190601f1680156107635780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019080838360005b8381101561079c578082015181840152602081019050610781565b50505050905090810190601f1680156107c95780820380516001836020036101000a031916815260200191505b50848103825285818151815260200191508051906020019060200280838360005b838110156108055780820151818401526020810190506107ea565b50505050905001965050505050505060405180910390f35b61085f6004803603602081101561083357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612817565b60405180806020018560ff1660ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001838103835287818151815260200191508051906020019080838360005b838110156108e15780820151818401526020810190506108c6565b50505050905090810190601f16801561090e5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019060200280838360005b8381101561094a57808201518184015260208101905061092f565b50505050905001965050505050505060405180910390f35b6060600060608033610972612fc8565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a555780601f10610a2a57610100808354040283529160200191610a55565b820191906000526020600020905b815481529060010190602001808311610a3857829003601f168201915b505050505081526020016001820160009054906101000a900460ff1660ff1660ff1681526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805480602002602001604051908101604052809291908181526020018280548015610b2057602002820191906000526020600020905b815481526020019060010190808311610b0c575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020018280548015610bae57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610b64575b5050505050815250509050600073ffffffffffffffffffffffffffffffffffffffff16816040015173ffffffffffffffffffffffffffffffffffffffff1611610bf657600080fd5b610bfe612fc8565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ce15780601f10610cb657610100808354040283529160200191610ce1565b820191906000526020600020905b815481529060010190602001808311610cc457829003601f168201915b505050505081526020016001820160009054906101000a900460ff1660ff1660ff1681526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805480602002602001604051908101604052809291908181526020018280548015610dac57602002820191906000526020600020905b815481526020019060010190808311610d98575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020018280548015610e3a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610df0575b50505050508152505090508060000151816020015182606001518360800151839350819150809050965096509650965050505090919293565b606060006060610e81613010565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f635780601f10610f3857610100808354040283529160200191610f63565b820191906000526020600020905b815481529060010190602001808311610f4657829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180548060200260200160405190810160405280929190818152602001828054801561104757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610ffd575b50505050508152505090506040518060000190506040518091039020856040516020018082805190602001908083835b6020831061109a5780518252602082019150602081019050602083039250611077565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012014156110e057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16111561111e57600080fd5b60405180606001604052808681526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600060405190808252806020026020018201604052801561117b5781602001602082028038833980820191505090505b508152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906111d9929190613047565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201908051906020019061123d9291906130c7565b509050506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201828054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113ba5780601f1061138f576101008083540402835291602001916113ba565b820191906000526020600020905b81548152906001019060200180831161139d57829003601f168201915b505050505092508080548060200260200160405190810160405280929190818152602001828054801561144257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116113f8575b50505050509050935093509350509193909250565b33611460612fc8565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115435780601f1061151857610100808354040283529160200191611543565b820191906000526020600020905b81548152906001019060200180831161152657829003601f168201915b505050505081526020016001820160009054906101000a900460ff1660ff1660ff1681526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180548060200260200160405190810160405280929190818152602001828054801561160e57602002820191906000526020600020905b8154815260200190600101908083116115fa575b505050505081526020016003820180548060200260200160405190810160405280929190818152602001828054801561169c57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611652575b5050505050815250509050600073ffffffffffffffffffffffffffffffffffffffff16816040015173ffffffffffffffffffffffffffffffffffffffff16116116e457600080fd5b336116ed613010565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117cf5780601f106117a4576101008083540402835291602001916117cf565b820191906000526020600020905b8154815290600101906020018083116117b257829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054806020026020016040519081016040528092919081815260200182805480156118b357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611869575b5050505050815250509050600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16116118fb57600080fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410611a0957600080fd5b6000826003018990806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816002013390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050505050505050565b6060600080606080611b78612fc8565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c5b5780601f10611c3057610100808354040283529160200191611c5b565b820191906000526020600020905b815481529060010190602001808311611c3e57829003601f168201915b505050505081526020016001820160009054906101000a900460ff1660ff1660ff1681526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805480602002602001604051908101604052809291908181526020018280548015611d2657602002820191906000526020600020905b815481526020019060010190808311611d12575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020018280548015611db457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611d6a575b5050505050815250509050600073ffffffffffffffffffffffffffffffffffffffff16816040015173ffffffffffffffffffffffffffffffffffffffff161115611dfd57600080fd5b6040518060000190506040518091039020886040516020018082805190602001908083835b60208310611e455780518252602082019150602081019050602083039250611e22565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001201415611e8b57600080fd5b60008760ff16118015611ea1575060788760ff16105b611eaa57600080fd5b6040518060a001604052808981526020018860ff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020016000604051908082528060200260200182016040528015611f105781602001602082028038833980820191505090505b5081526020016000604051908082528060200260200182016040528015611f465781602001602082028038833980820191505090505b50815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190611fa5929190613047565b5060208201518160010160006101000a81548160ff021916908360ff16021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600201908051906020019061202a929190613151565b5060808201518160030190805190602001906120479291906130c7565b50905050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301848054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122595780601f1061222e57610100808354040283529160200191612259565b820191906000526020600020905b81548152906001019060200180831161223c57829003601f168201915b50505050509450818054806020026020016040519081016040528092919081815260200182805480156122ab57602002820191906000526020600020905b815481526020019060010190808311612297575b505050505091508080548060200260200160405190810160405280929190818152602001828054801561233357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116122e9575b5050505050905095509550955095509550509295509295909350565b600033905090565b60608033612363613010565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156124455780601f1061241a57610100808354040283529160200191612445565b820191906000526020600020905b81548152906001019060200180831161242857829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180548060200260200160405190810160405280929190818152602001828054801561252957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116124df575b5050505050815250509050600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff161161257157600080fd5b612579613010565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561265b5780601f106126305761010080835404028352916020019161265b565b820191906000526020600020905b81548152906001019060200180831161263e57829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180548060200260200160405190810160405280929190818152602001828054801561273f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116126f5575b505050505081525050905080600001518160400151819150809050945094505050509091565b6060806060600060405190808252806020026020018201604052801561279a5781602001602082028038833980820191505090505b506040518060400160405280600c81526020017f626c6f6f64207465737420310000000000000000000000000000000000000000815250906040518060400160405280600a81526020017f626c6f6f6420746573740000000000000000000000000000000000000000000081525090809050925092509250909192565b6060600080606084612827612fc8565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561290a5780601f106128df5761010080835404028352916020019161290a565b820191906000526020600020905b8154815290600101906020018083116128ed57829003601f168201915b505050505081526020016001820160009054906101000a900460ff1660ff1660ff1681526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054806020026020016040519081016040528092919081815260200182805480156129d557602002820191906000526020600020905b8154815260200190600101908083116129c1575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020018280548015612a6357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612a19575b5050505050815250509050600073ffffffffffffffffffffffffffffffffffffffff16816040015173ffffffffffffffffffffffffffffffffffffffff1611612aab57600080fd5b33612ab4613010565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612b965780601f10612b6b57610100808354040283529160200191612b96565b820191906000526020600020905b815481529060010190602001808311612b7957829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805480602002602001604051908101604052809291908181526020018280548015612c7a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612c30575b5050505050815250509050600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff1611612cc257600080fd5b612cca612fc8565b600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612dad5780601f10612d8257610100808354040283529160200191612dad565b820191906000526020600020905b815481529060010190602001808311612d9057829003601f168201915b505050505081526020016001820160009054906101000a900460ff1660ff1660ff1681526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805480602002602001604051908101604052809291908181526020018280548015612e7857602002820191906000526020600020905b815481526020019060010190808311612e64575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020018280548015612f0657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612ebc575b50505050508152505090506000600360008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411612f9a57600080fd5b8060000151816020015182604001518360600151839350809050985098509850985050505050509193509193565b6040518060a0016040528060608152602001600060ff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081525090565b604051806060016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061308857805160ff19168380011785556130b6565b828001600101855582156130b6579182015b828111156130b557825182559160200191906001019061309a565b5b5090506130c3919061319e565b5090565b828054828255906000526020600020908101928215613140579160200282015b8281111561313f5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906130e7565b5b50905061314d91906131c3565b5090565b82805482825590600052602060002090810192821561318d579160200282015b8281111561318c578251825591602001919060010190613171565b5b50905061319a9190613206565b5090565b6131c091905b808211156131bc5760008160009055506001016131a4565b5090565b90565b61320391905b808211156131ff57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055506001016131c9565b5090565b90565b61322891905b8082111561322457600081600090555060010161320c565b5090565b9056fea265627a7a72315820fc1bfc711b65f4b7259700db10de91b4899a0bad7de28212d7bb80592421214764736f6c63430005100032",
  "sourceMap": "203:1923:3:-;;;324:55;8:9:-1;5:2;;;30:1;27;20:12;5:2;324:55:3;362:10;354:5;;:18;;;;;;;;;;;;;;;;;;203:1923;;;;;;",
  "deployedSourceMap": "203:1923:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;203:1923:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;937:241:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;937:241:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;937:241:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;937:241:2;;;;;;;;;;;;;;;;;;;;;;1020:471:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1020:471:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1020:471:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1020:471:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1020:471:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1020:471:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1020:471:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1020:471:0;;;;;;;;;;;;;;;;;;;;1213:746:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1213:746:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1209:861:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1209:861:2;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1209:861:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1209:861:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1209:861:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1209:861:2;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1209:861:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1209:861:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1209:861:2;;;;;;;;;;;;;;;;;;;;;;;514:85:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;783:197:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;783:197:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;783:197:0;;;;;;;;;;;;;;;;;;;271:158:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;271:158:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;271:158:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;271:158:1;;;;;;;;;;;;;;;;;;;;;813:333:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;813:333:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;813:333:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;813:333:3;;;;;;;;;;;;;;;;;;;;;937:241:2;1008:13;1023:5;1030:16;1048;988:10;756:16;;:::i;:::-;775:8;:14;784:4;775:14;;;;;;;;;;;;;;;756:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;824:3;807:21;;:1;:6;;;:21;;;799:30;;;;;;1076:16;;:::i;:::-;1095:8;:20;1104:10;1095:20;;;;;;;;;;;;;;;1076:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1133:1;:6;;;1141:1;:5;;;1148:1;:7;;;1157:1;:13;;;1125:46;;;;;;;;;;;;;;;;;;937:241;;;;;;:::o;1020:471:0:-;1078:13;1093:7;1102:16;1130:15;;:::i;:::-;1148:7;:19;1156:10;1148:19;;;;;;;;;;;;;;;1130:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1223:13;;;;;;;;;;;;;;1212:5;1195:23;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1195:23:0;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1195:23:0;;;1185:34;;;;;;:51;;1177:60;;;;;;1274:3;1257:21;;:1;:6;;;:21;;;1255:24;1247:33;;;;;;1313:68;;;;;;;;1326:5;1313:68;;;;1338:10;1313:68;;;;;;1377:1;1363:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;1363:16:0;;;;1313:68;;;1291:7;:19;1299:10;1291:19;;;;;;;;;;;;;;;:90;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1399:7;:19;1407:10;1399:19;;;;;;;;;;;;;;;:24;;1425:7;:19;1433:10;1425:19;;;;;;;;;;;;;;;:24;;;;;;;;;;;;1451:7;:19;1459:10;1451:19;;;;;;;;;;;;;;;:32;;1391:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1020:471;;;;;:::o;1213:746:3:-;1295:10;756:16:2;;:::i;:::-;775:8;:14;784:4;775:14;;;;;;;;;;;;;;;756:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;824:3;807:21;;:1;:6;;;:21;;;799:30;;;;;;1319:10:3;640:15:0;;:::i;:::-;658:7;:13;666:4;658:13;;;;;;;;;;;;;;;640:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;706:3;689:21;;:1;:6;;;:21;;;681:30;;;;;;1386:17:3;1406:8;:20;1415:10;1406:20;;;;;;;;;;;;;;;1386:40;;1436:16;1455:7;:16;1463:7;1455:16;;;;;;;;;;;;;;;1436:35;;1581:1;1542:15;:27;1558:10;1542:27;;;;;;;;;;;;;;;:36;1570:7;1542:36;;;;;;;;;;;;;;;;:40;1534:49;;;;;;1704:8;1715:1;:13;;1734:7;1715:27;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1715:27:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1704:38;;1860:3;1821:15;:27;1837:10;1821:27;;;;;;;;;;;;;;;:36;1849:7;1821:36;;;;;;;;;;;;;;;:42;;;;1921:1;:14;;1941:10;1921:31;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1921:31:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;721:1:0;;;839::2;;1213:746:3;;;;:::o;1209:861:2:-;1280:13;1295:5;1302:7;1311:16;1329;1408;;:::i;:::-;1427:8;:20;1436:10;1427:20;;;;;;;;;;;;;;;1408:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1552:3;1535:21;;:1;:6;;;:21;;;1533:24;1525:33;;;;;;1682:13;;;;;;;;;;;;;;1671:5;1654:23;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1654:23:2;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1654:23:2;;;1644:34;;;;;;:51;;1636:60;;;;;;1722:1;1715:4;:8;;;1714:26;;;;;1736:3;1729:4;:10;;;1714:26;1706:35;;;;;;1806:98;;;;;;;;1820:5;1806:98;;;;1830:4;1806:98;;;;;;1840:10;1806:98;;;;;;1871:1;1857:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;1857:16:2;;;;1806:98;;;;1900:1;1886:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;1886:16:2;;;;1806:98;;;1783:8;:20;1792:10;1783:20;;;;;;;;;;;;;;;:121;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1922:8;:20;1931:10;1922:20;;;;;;;;;;;;;;;:25;;1949:8;:20;1958:10;1949:20;;;;;;;;;;;;;;;:24;;;;;;;;;;;;1975:8;:20;1984:10;1975:20;;;;;;;;;;;;;;;:25;;;;;;;;;;;;2002:8;:20;2011:10;2002:20;;;;;;;;;;;;;;;:26;;2030:8;:20;2039:10;2030:20;;;;;;;;;;;;;;;:32;;1914:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1209:861;;;;;;;;:::o;514:85:3:-;557:7;582:10;575:17;;514:85;:::o;783:197:0:-;852:13;867:16;832:10;640:15;;:::i;:::-;658:7;:13;666:4;658:13;;;;;;;;;;;;;;;640:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;706:3;689:21;;:1;:6;;;:21;;;681:30;;;;;;895:15;;:::i;:::-;913:7;:19;921:10;913:19;;;;;;;;;;;;;;;895:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;950:1;:6;;;958:1;:14;;;942:31;;;;;;;;;;;783:197;;;;:::o;271:158:1:-;311:13;326;341:16;419:1;405:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;405:16:1;;;;368:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;271:158;;;:::o;813:333:3:-;931:13;947:5;954:7;963:16;889:8;756:16:2;;:::i;:::-;775:8;:14;784:4;775:14;;;;;;;;;;;;;;;756:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;824:3;807:21;;:1;:6;;;:21;;;799:30;;;;;;911:10:3;640:15:0;;:::i;:::-;658:7;:13;666:4;658:13;;;;;;;;;;;;;;;640:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;706:3;689:21;;:1;:6;;;:21;;;681:30;;;;;;991:16:3;;:::i;:::-;1010:8;:18;1019:8;1010:18;;;;;;;;;;;;;;;991:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1087:1;1047:15;:25;1063:8;1047:25;;;;;;;;;;;;;;;:37;1073:10;1047:37;;;;;;;;;;;;;;;;:41;1039:50;;;;;;1108:1;:6;;;1116:1;:5;;;1123:1;:6;;;1131:1;:7;;;1100:39;;;;;;;;;;;;;;;839:1:2;;813:333:3;;;;;;;:::o;203:1923::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.4.25 <0.7.0;\n\nimport \"./Doctor.sol\";\nimport \"./Patient.sol\";\nimport \"./File.sol\";\n\n// Service contract, inherits from patient, doctor, file \n// and handles higher-level functionality\ncontract Service is Doctor, Patient, File {\n\t\n    // message sender\n    address private owner;\n    \n    // set owner\n    constructor() public{\n        owner = msg.sender;\n    }\n\n    // make sure that the sender is the owner\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    function testService() public view returns(address){\n        return msg.sender;\n    }\n    \n    // methods to implement: \n    // give access to a doctor, add a file, get patient/doctor info from a file?\n    // want to have checks as well\n\n    // allow doctor to get info about a specific patient\n    function getPatientInfoForDoctor(address _patient) public view checkPatient(_patient) checkDoctor(msg.sender) returns(string memory , uint8, address, bytes32[] memory ){\n        patient memory p = patients[_patient];\n\n        require(patientToDoctor[_patient][msg.sender] > 0);\n\n        return (p.name, p.age, p.addr, p.files);\n    }\n\n    // method to grant a doctor access to a patient's record\n    function grantDoctorAccess(address _doctor, address _patient) public checkPatient(msg.sender) checkDoctor(msg.sender) {\n        // get struct for patient and doctor\n        patient storage p = patients[msg.sender];\n        doctor storage d = doctors[_doctor];\n        // check doctor does not already have access\n        require(patientToDoctor[msg.sender][_doctor] < 1);// this means doctor already been access\n        // get the index of doctor's position in patient's doctor_list\n        uint idx = p.doctor_list.push(_doctor);// new length of array\n        // add doctor to patient's doctor list\n        patientToDoctor[msg.sender][_doctor] = idx;\n        // add patient to doctor's patient list\n        d.patient_list.push(msg.sender);\n    }\n    \n    // method to add a file to patient's record\n\n    // check doctor exists, check patient exists, check doctor isn't already in patient's doctor list\n\n\n    \n\n\n}",
  "sourcePath": "/Users/kevincai/Desktop/UCL/Dartmouth/Classes/SeniorDesignAndImplementationProject/decentralized-health-blockchain/contracts/Service.sol",
  "ast": {
    "absolutePath": "project:/contracts/Service.sol",
    "exportedSymbols": {
      "Service": [
        573
      ]
    },
    "id": 574,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 417,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".25",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "absolutePath": "project:/contracts/Doctor.sol",
        "file": "./Doctor.sol",
        "id": 418,
        "nodeType": "ImportDirective",
        "scope": 574,
        "sourceUnit": 145,
        "src": "34:22:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Patient.sol",
        "file": "./Patient.sol",
        "id": 419,
        "nodeType": "ImportDirective",
        "scope": 574,
        "sourceUnit": 416,
        "src": "57:23:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/File.sol",
        "file": "./File.sol",
        "id": 420,
        "nodeType": "ImportDirective",
        "scope": 574,
        "sourceUnit": 216,
        "src": "81:20:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 421,
              "name": "Doctor",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 144,
              "src": "223:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Doctor_$144",
                "typeString": "contract Doctor"
              }
            },
            "id": 422,
            "nodeType": "InheritanceSpecifier",
            "src": "223:6:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 423,
              "name": "Patient",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 415,
              "src": "231:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Patient_$415",
                "typeString": "contract Patient"
              }
            },
            "id": 424,
            "nodeType": "InheritanceSpecifier",
            "src": "231:7:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 425,
              "name": "File",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 215,
              "src": "240:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_File_$215",
                "typeString": "contract File"
              }
            },
            "id": 426,
            "nodeType": "InheritanceSpecifier",
            "src": "240:4:3"
          }
        ],
        "contractDependencies": [
          144,
          215,
          415
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 573,
        "linearizedBaseContracts": [
          573,
          215,
          415,
          144
        ],
        "name": "Service",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 428,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 573,
            "src": "275:21:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 427,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "275:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 436,
              "nodeType": "Block",
              "src": "344:35:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 431,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 428,
                      "src": "354:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 432,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 588,
                        "src": "362:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "362:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "354:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 435,
                  "nodeType": "ExpressionStatement",
                  "src": "354:18:3"
                }
              ]
            },
            "documentation": null,
            "id": 437,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "335:2:3"
            },
            "returnParameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "344:0:3"
            },
            "scope": 573,
            "src": "324:55:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 447,
              "nodeType": "Block",
              "src": "452:56:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 440,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 588,
                            "src": "470:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "470:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 442,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 428,
                          "src": "484:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "470:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 439,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        591,
                        592
                      ],
                      "referencedDeclaration": 591,
                      "src": "462:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "462:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 445,
                  "nodeType": "ExpressionStatement",
                  "src": "462:28:3"
                },
                {
                  "id": 446,
                  "nodeType": "PlaceholderStatement",
                  "src": "500:1:3"
                }
              ]
            },
            "documentation": null,
            "id": 448,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "449:2:3"
            },
            "src": "431:77:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 456,
              "nodeType": "Block",
              "src": "565:34:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 453,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 588,
                      "src": "582:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "582:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 452,
                  "id": 455,
                  "nodeType": "Return",
                  "src": "575:17:3"
                }
              ]
            },
            "documentation": null,
            "id": 457,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testService",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 449,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "534:2:3"
            },
            "returnParameters": {
              "id": 452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 451,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 457,
                  "src": "557:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 450,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "556:9:3"
            },
            "scope": 573,
            "src": "514:85:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 505,
              "nodeType": "Block",
              "src": "981:165:3",
              "statements": [
                {
                  "assignments": [
                    479
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 479,
                      "name": "p",
                      "nodeType": "VariableDeclaration",
                      "scope": 505,
                      "src": "991:16:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_patient_$246_memory_ptr",
                        "typeString": "struct Patient.patient"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 478,
                        "name": "patient",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 246,
                        "src": "991:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_patient_$246_storage_ptr",
                          "typeString": "struct Patient.patient"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 483,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 480,
                      "name": "patients",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 221,
                      "src": "1010:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_patient_$246_storage_$",
                        "typeString": "mapping(address => struct Patient.patient storage ref)"
                      }
                    },
                    "id": 482,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 481,
                      "name": "_patient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 459,
                      "src": "1019:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1010:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_patient_$246_storage",
                      "typeString": "struct Patient.patient storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "991:37:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 485,
                              "name": "patientToDoctor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 227,
                              "src": "1047:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 487,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 486,
                              "name": "_patient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 459,
                              "src": "1063:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1047:25:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 490,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 488,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 588,
                              "src": "1073:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1073:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1047:37:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1087:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1047:41:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 484,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        591,
                        592
                      ],
                      "referencedDeclaration": 591,
                      "src": "1039:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1039:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 494,
                  "nodeType": "ExpressionStatement",
                  "src": "1039:50:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 495,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 479,
                          "src": "1108:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_patient_$246_memory_ptr",
                            "typeString": "struct Patient.patient memory"
                          }
                        },
                        "id": 496,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 235,
                        "src": "1108:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 497,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 479,
                          "src": "1116:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_patient_$246_memory_ptr",
                            "typeString": "struct Patient.patient memory"
                          }
                        },
                        "id": 498,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "age",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 237,
                        "src": "1116:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 499,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 479,
                          "src": "1123:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_patient_$246_memory_ptr",
                            "typeString": "struct Patient.patient memory"
                          }
                        },
                        "id": 500,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 239,
                        "src": "1123:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 501,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 479,
                          "src": "1131:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_patient_$246_memory_ptr",
                            "typeString": "struct Patient.patient memory"
                          }
                        },
                        "id": 502,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "files",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 242,
                        "src": "1131:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory",
                          "typeString": "bytes32[] memory"
                        }
                      }
                    ],
                    "id": 503,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1107:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_$_t_uint8_$_t_address_$_t_array$_t_bytes32_$dyn_memory_$",
                      "typeString": "tuple(string memory,uint8,address,bytes32[] memory)"
                    }
                  },
                  "functionReturnParameters": 477,
                  "id": 504,
                  "nodeType": "Return",
                  "src": "1100:39:3"
                }
              ]
            },
            "documentation": null,
            "id": 506,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 462,
                    "name": "_patient",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 459,
                    "src": "889:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 463,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 461,
                  "name": "checkPatient",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 267,
                  "src": "876:12:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "876:22:3"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 465,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 588,
                      "src": "911:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "911:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 467,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 464,
                  "name": "checkDoctor",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 40,
                  "src": "899:11:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "899:23:3"
              }
            ],
            "name": "getPatientInfoForDoctor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 459,
                  "name": "_patient",
                  "nodeType": "VariableDeclaration",
                  "scope": 506,
                  "src": "846:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 458,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "846:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "845:18:3"
            },
            "returnParameters": {
              "id": 477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 469,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 506,
                  "src": "931:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 468,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "931:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 471,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 506,
                  "src": "947:5:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 470,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "947:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 473,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 506,
                  "src": "954:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 472,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "954:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 476,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 506,
                  "src": "963:16:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 474,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "963:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 475,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "963:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "930:51:3"
            },
            "scope": 573,
            "src": "813:333:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 571,
              "nodeType": "Block",
              "src": "1331:628:3",
              "statements": [
                {
                  "assignments": [
                    522
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 522,
                      "name": "p",
                      "nodeType": "VariableDeclaration",
                      "scope": 571,
                      "src": "1386:17:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_patient_$246_storage_ptr",
                        "typeString": "struct Patient.patient"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 521,
                        "name": "patient",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 246,
                        "src": "1386:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_patient_$246_storage_ptr",
                          "typeString": "struct Patient.patient"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 527,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 523,
                      "name": "patients",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 221,
                      "src": "1406:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_patient_$246_storage_$",
                        "typeString": "mapping(address => struct Patient.patient storage ref)"
                      }
                    },
                    "id": 526,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 524,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 588,
                        "src": "1415:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 525,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1415:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1406:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_patient_$246_storage",
                      "typeString": "struct Patient.patient storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1386:40:3"
                },
                {
                  "assignments": [
                    529
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 529,
                      "name": "d",
                      "nodeType": "VariableDeclaration",
                      "scope": 571,
                      "src": "1436:16:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_doctor_$19_storage_ptr",
                        "typeString": "struct Doctor.doctor"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 528,
                        "name": "doctor",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 19,
                        "src": "1436:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_doctor_$19_storage_ptr",
                          "typeString": "struct Doctor.doctor"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 533,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 530,
                      "name": "doctors",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "1455:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_doctor_$19_storage_$",
                        "typeString": "mapping(address => struct Doctor.doctor storage ref)"
                      }
                    },
                    "id": 532,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 531,
                      "name": "_doctor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 508,
                      "src": "1463:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1455:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_doctor_$19_storage",
                      "typeString": "struct Doctor.doctor storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1436:35:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 535,
                              "name": "patientToDoctor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 227,
                              "src": "1542:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 538,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 536,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 588,
                                "src": "1558:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1558:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1542:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 540,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 539,
                            "name": "_doctor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 508,
                            "src": "1570:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1542:36:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1581:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1542:40:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 534,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        591,
                        592
                      ],
                      "referencedDeclaration": 591,
                      "src": "1534:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1534:49:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 544,
                  "nodeType": "ExpressionStatement",
                  "src": "1534:49:3"
                },
                {
                  "assignments": [
                    546
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 546,
                      "name": "idx",
                      "nodeType": "VariableDeclaration",
                      "scope": 571,
                      "src": "1704:8:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 545,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1704:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 552,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 550,
                        "name": "_doctor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 508,
                        "src": "1734:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 547,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "1715:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_patient_$246_storage_ptr",
                            "typeString": "struct Patient.patient storage pointer"
                          }
                        },
                        "id": 548,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "doctor_list",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 245,
                        "src": "1715:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1715:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1715:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1704:38:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 553,
                          "name": "patientToDoctor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 227,
                          "src": "1821:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 557,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 554,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 588,
                            "src": "1837:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1837:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1821:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 558,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 556,
                        "name": "_doctor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 508,
                        "src": "1849:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1821:36:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 559,
                      "name": "idx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 546,
                      "src": "1860:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1821:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 561,
                  "nodeType": "ExpressionStatement",
                  "src": "1821:42:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 567,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 588,
                          "src": "1941:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1941:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 562,
                          "name": "d",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 529,
                          "src": "1921:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_doctor_$19_storage_ptr",
                            "typeString": "struct Doctor.doctor storage pointer"
                          }
                        },
                        "id": 565,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "patient_list",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18,
                        "src": "1921:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1921:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1921:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 570,
                  "nodeType": "ExpressionStatement",
                  "src": "1921:31:3"
                }
              ]
            },
            "documentation": null,
            "id": 572,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 513,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 588,
                      "src": "1295:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1295:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 515,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 512,
                  "name": "checkPatient",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 267,
                  "src": "1282:12:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1282:24:3"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 517,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 588,
                      "src": "1319:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1319:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 519,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 516,
                  "name": "checkDoctor",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 40,
                  "src": "1307:11:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1307:23:3"
              }
            ],
            "name": "grantDoctorAccess",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 508,
                  "name": "_doctor",
                  "nodeType": "VariableDeclaration",
                  "scope": 572,
                  "src": "1240:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 507,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1240:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 510,
                  "name": "_patient",
                  "nodeType": "VariableDeclaration",
                  "scope": 572,
                  "src": "1257:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 509,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1257:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1239:35:3"
            },
            "returnParameters": {
              "id": 520,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1331:0:3"
            },
            "scope": 573,
            "src": "1213:746:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 574,
        "src": "203:1923:3"
      }
    ],
    "src": "0:2126:3"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/Service.sol",
      "exportedSymbols": {
        "Service": [
          573
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".25",
            "<",
            "0.7",
            ".0"
          ]
        },
        "id": 417,
        "name": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "attributes": {
          "SourceUnit": 145,
          "absolutePath": "project:/contracts/Doctor.sol",
          "file": "./Doctor.sol",
          "scope": 574,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 418,
        "name": "ImportDirective",
        "src": "34:22:3"
      },
      {
        "attributes": {
          "SourceUnit": 416,
          "absolutePath": "project:/contracts/Patient.sol",
          "file": "./Patient.sol",
          "scope": 574,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 419,
        "name": "ImportDirective",
        "src": "57:23:3"
      },
      {
        "attributes": {
          "SourceUnit": 216,
          "absolutePath": "project:/contracts/File.sol",
          "file": "./File.sol",
          "scope": 574,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 420,
        "name": "ImportDirective",
        "src": "81:20:3"
      },
      {
        "attributes": {
          "contractDependencies": [
            144,
            215,
            415
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            573,
            215,
            415,
            144
          ],
          "name": "Service",
          "scope": 574
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Doctor",
                  "referencedDeclaration": 144,
                  "type": "contract Doctor"
                },
                "id": 421,
                "name": "UserDefinedTypeName",
                "src": "223:6:3"
              }
            ],
            "id": 422,
            "name": "InheritanceSpecifier",
            "src": "223:6:3"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Patient",
                  "referencedDeclaration": 415,
                  "type": "contract Patient"
                },
                "id": 423,
                "name": "UserDefinedTypeName",
                "src": "231:7:3"
              }
            ],
            "id": 424,
            "name": "InheritanceSpecifier",
            "src": "231:7:3"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "File",
                  "referencedDeclaration": 215,
                  "type": "contract File"
                },
                "id": 425,
                "name": "UserDefinedTypeName",
                "src": "240:4:3"
              }
            ],
            "id": 426,
            "name": "InheritanceSpecifier",
            "src": "240:4:3"
          },
          {
            "attributes": {
              "constant": false,
              "name": "owner",
              "scope": 573,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 427,
                "name": "ElementaryTypeName",
                "src": "275:7:3"
              }
            ],
            "id": 428,
            "name": "VariableDeclaration",
            "src": "275:21:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 573,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 429,
                "name": "ParameterList",
                "src": "335:2:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 430,
                "name": "ParameterList",
                "src": "344:0:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 428,
                              "type": "address",
                              "value": "owner"
                            },
                            "id": 431,
                            "name": "Identifier",
                            "src": "354:5:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 588,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 432,
                                "name": "Identifier",
                                "src": "362:3:3"
                              }
                            ],
                            "id": 433,
                            "name": "MemberAccess",
                            "src": "362:10:3"
                          }
                        ],
                        "id": 434,
                        "name": "Assignment",
                        "src": "354:18:3"
                      }
                    ],
                    "id": 435,
                    "name": "ExpressionStatement",
                    "src": "354:18:3"
                  }
                ],
                "id": 436,
                "name": "Block",
                "src": "344:35:3"
              }
            ],
            "id": 437,
            "name": "FunctionDefinition",
            "src": "324:55:3"
          },
          {
            "attributes": {
              "documentation": null,
              "name": "onlyOwner",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 438,
                "name": "ParameterList",
                "src": "449:2:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                591,
                                592
                              ],
                              "referencedDeclaration": 591,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 439,
                            "name": "Identifier",
                            "src": "462:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 588,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 440,
                                    "name": "Identifier",
                                    "src": "470:3:3"
                                  }
                                ],
                                "id": 441,
                                "name": "MemberAccess",
                                "src": "470:10:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 428,
                                  "type": "address",
                                  "value": "owner"
                                },
                                "id": 442,
                                "name": "Identifier",
                                "src": "484:5:3"
                              }
                            ],
                            "id": 443,
                            "name": "BinaryOperation",
                            "src": "470:19:3"
                          }
                        ],
                        "id": 444,
                        "name": "FunctionCall",
                        "src": "462:28:3"
                      }
                    ],
                    "id": 445,
                    "name": "ExpressionStatement",
                    "src": "462:28:3"
                  },
                  {
                    "id": 446,
                    "name": "PlaceholderStatement",
                    "src": "500:1:3"
                  }
                ],
                "id": 447,
                "name": "Block",
                "src": "452:56:3"
              }
            ],
            "id": 448,
            "name": "ModifierDefinition",
            "src": "431:77:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "testService",
              "scope": 573,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 449,
                "name": "ParameterList",
                "src": "534:2:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 457,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 450,
                        "name": "ElementaryTypeName",
                        "src": "557:7:3"
                      }
                    ],
                    "id": 451,
                    "name": "VariableDeclaration",
                    "src": "557:7:3"
                  }
                ],
                "id": 452,
                "name": "ParameterList",
                "src": "556:9:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 452
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "sender",
                          "referencedDeclaration": null,
                          "type": "address payable"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 588,
                              "type": "msg",
                              "value": "msg"
                            },
                            "id": 453,
                            "name": "Identifier",
                            "src": "582:3:3"
                          }
                        ],
                        "id": 454,
                        "name": "MemberAccess",
                        "src": "582:10:3"
                      }
                    ],
                    "id": 455,
                    "name": "Return",
                    "src": "575:17:3"
                  }
                ],
                "id": 456,
                "name": "Block",
                "src": "565:34:3"
              }
            ],
            "id": 457,
            "name": "FunctionDefinition",
            "src": "514:85:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "getPatientInfoForDoctor",
              "scope": 573,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_patient",
                      "scope": 506,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 458,
                        "name": "ElementaryTypeName",
                        "src": "846:7:3"
                      }
                    ],
                    "id": 459,
                    "name": "VariableDeclaration",
                    "src": "846:16:3"
                  }
                ],
                "id": 460,
                "name": "ParameterList",
                "src": "845:18:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 506,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 468,
                        "name": "ElementaryTypeName",
                        "src": "931:6:3"
                      }
                    ],
                    "id": 469,
                    "name": "VariableDeclaration",
                    "src": "931:13:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 506,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint8",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint8",
                          "type": "uint8"
                        },
                        "id": 470,
                        "name": "ElementaryTypeName",
                        "src": "947:5:3"
                      }
                    ],
                    "id": 471,
                    "name": "VariableDeclaration",
                    "src": "947:5:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 506,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 472,
                        "name": "ElementaryTypeName",
                        "src": "954:7:3"
                      }
                    ],
                    "id": 473,
                    "name": "VariableDeclaration",
                    "src": "954:7:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 506,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "bytes32[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "bytes32[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
                            "id": 474,
                            "name": "ElementaryTypeName",
                            "src": "963:7:3"
                          }
                        ],
                        "id": 475,
                        "name": "ArrayTypeName",
                        "src": "963:9:3"
                      }
                    ],
                    "id": 476,
                    "name": "VariableDeclaration",
                    "src": "963:16:3"
                  }
                ],
                "id": 477,
                "name": "ParameterList",
                "src": "930:51:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 267,
                      "type": "modifier (address)",
                      "value": "checkPatient"
                    },
                    "id": 461,
                    "name": "Identifier",
                    "src": "876:12:3"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 459,
                      "type": "address",
                      "value": "_patient"
                    },
                    "id": 462,
                    "name": "Identifier",
                    "src": "889:8:3"
                  }
                ],
                "id": 463,
                "name": "ModifierInvocation",
                "src": "876:22:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 40,
                      "type": "modifier (address)",
                      "value": "checkDoctor"
                    },
                    "id": 464,
                    "name": "Identifier",
                    "src": "899:11:3"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "member_name": "sender",
                      "referencedDeclaration": null,
                      "type": "address payable"
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 588,
                          "type": "msg",
                          "value": "msg"
                        },
                        "id": 465,
                        "name": "Identifier",
                        "src": "911:3:3"
                      }
                    ],
                    "id": 466,
                    "name": "MemberAccess",
                    "src": "911:10:3"
                  }
                ],
                "id": 467,
                "name": "ModifierInvocation",
                "src": "899:23:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        479
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "p",
                          "scope": 505,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct Patient.patient",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "patient",
                              "referencedDeclaration": 246,
                              "type": "struct Patient.patient"
                            },
                            "id": 478,
                            "name": "UserDefinedTypeName",
                            "src": "991:7:3"
                          }
                        ],
                        "id": 479,
                        "name": "VariableDeclaration",
                        "src": "991:16:3"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct Patient.patient storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 221,
                              "type": "mapping(address => struct Patient.patient storage ref)",
                              "value": "patients"
                            },
                            "id": 480,
                            "name": "Identifier",
                            "src": "1010:8:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 459,
                              "type": "address",
                              "value": "_patient"
                            },
                            "id": 481,
                            "name": "Identifier",
                            "src": "1019:8:3"
                          }
                        ],
                        "id": 482,
                        "name": "IndexAccess",
                        "src": "1010:18:3"
                      }
                    ],
                    "id": 483,
                    "name": "VariableDeclarationStatement",
                    "src": "991:37:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                591,
                                592
                              ],
                              "referencedDeclaration": 591,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 484,
                            "name": "Identifier",
                            "src": "1039:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "mapping(address => uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 227,
                                          "type": "mapping(address => mapping(address => uint256))",
                                          "value": "patientToDoctor"
                                        },
                                        "id": 485,
                                        "name": "Identifier",
                                        "src": "1047:15:3"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 459,
                                          "type": "address",
                                          "value": "_patient"
                                        },
                                        "id": 486,
                                        "name": "Identifier",
                                        "src": "1063:8:3"
                                      }
                                    ],
                                    "id": 487,
                                    "name": "IndexAccess",
                                    "src": "1047:25:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 588,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 488,
                                        "name": "Identifier",
                                        "src": "1073:3:3"
                                      }
                                    ],
                                    "id": 489,
                                    "name": "MemberAccess",
                                    "src": "1073:10:3"
                                  }
                                ],
                                "id": 490,
                                "name": "IndexAccess",
                                "src": "1047:37:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 491,
                                "name": "Literal",
                                "src": "1087:1:3"
                              }
                            ],
                            "id": 492,
                            "name": "BinaryOperation",
                            "src": "1047:41:3"
                          }
                        ],
                        "id": 493,
                        "name": "FunctionCall",
                        "src": "1039:50:3"
                      }
                    ],
                    "id": 494,
                    "name": "ExpressionStatement",
                    "src": "1039:50:3"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 477
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "tuple(string memory,uint8,address,bytes32[] memory)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "name",
                              "referencedDeclaration": 235,
                              "type": "string memory"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 479,
                                  "type": "struct Patient.patient memory",
                                  "value": "p"
                                },
                                "id": 495,
                                "name": "Identifier",
                                "src": "1108:1:3"
                              }
                            ],
                            "id": 496,
                            "name": "MemberAccess",
                            "src": "1108:6:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "age",
                              "referencedDeclaration": 237,
                              "type": "uint8"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 479,
                                  "type": "struct Patient.patient memory",
                                  "value": "p"
                                },
                                "id": 497,
                                "name": "Identifier",
                                "src": "1116:1:3"
                              }
                            ],
                            "id": 498,
                            "name": "MemberAccess",
                            "src": "1116:5:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "addr",
                              "referencedDeclaration": 239,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 479,
                                  "type": "struct Patient.patient memory",
                                  "value": "p"
                                },
                                "id": 499,
                                "name": "Identifier",
                                "src": "1123:1:3"
                              }
                            ],
                            "id": 500,
                            "name": "MemberAccess",
                            "src": "1123:6:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "files",
                              "referencedDeclaration": 242,
                              "type": "bytes32[] memory"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 479,
                                  "type": "struct Patient.patient memory",
                                  "value": "p"
                                },
                                "id": 501,
                                "name": "Identifier",
                                "src": "1131:1:3"
                              }
                            ],
                            "id": 502,
                            "name": "MemberAccess",
                            "src": "1131:7:3"
                          }
                        ],
                        "id": 503,
                        "name": "TupleExpression",
                        "src": "1107:32:3"
                      }
                    ],
                    "id": 504,
                    "name": "Return",
                    "src": "1100:39:3"
                  }
                ],
                "id": 505,
                "name": "Block",
                "src": "981:165:3"
              }
            ],
            "id": 506,
            "name": "FunctionDefinition",
            "src": "813:333:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "grantDoctorAccess",
              "scope": 573,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_doctor",
                      "scope": 572,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 507,
                        "name": "ElementaryTypeName",
                        "src": "1240:7:3"
                      }
                    ],
                    "id": 508,
                    "name": "VariableDeclaration",
                    "src": "1240:15:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_patient",
                      "scope": 572,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 509,
                        "name": "ElementaryTypeName",
                        "src": "1257:7:3"
                      }
                    ],
                    "id": 510,
                    "name": "VariableDeclaration",
                    "src": "1257:16:3"
                  }
                ],
                "id": 511,
                "name": "ParameterList",
                "src": "1239:35:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 520,
                "name": "ParameterList",
                "src": "1331:0:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 267,
                      "type": "modifier (address)",
                      "value": "checkPatient"
                    },
                    "id": 512,
                    "name": "Identifier",
                    "src": "1282:12:3"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "member_name": "sender",
                      "referencedDeclaration": null,
                      "type": "address payable"
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 588,
                          "type": "msg",
                          "value": "msg"
                        },
                        "id": 513,
                        "name": "Identifier",
                        "src": "1295:3:3"
                      }
                    ],
                    "id": 514,
                    "name": "MemberAccess",
                    "src": "1295:10:3"
                  }
                ],
                "id": 515,
                "name": "ModifierInvocation",
                "src": "1282:24:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 40,
                      "type": "modifier (address)",
                      "value": "checkDoctor"
                    },
                    "id": 516,
                    "name": "Identifier",
                    "src": "1307:11:3"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "member_name": "sender",
                      "referencedDeclaration": null,
                      "type": "address payable"
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 588,
                          "type": "msg",
                          "value": "msg"
                        },
                        "id": 517,
                        "name": "Identifier",
                        "src": "1319:3:3"
                      }
                    ],
                    "id": 518,
                    "name": "MemberAccess",
                    "src": "1319:10:3"
                  }
                ],
                "id": 519,
                "name": "ModifierInvocation",
                "src": "1307:23:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        522
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "p",
                          "scope": 571,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct Patient.patient",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "patient",
                              "referencedDeclaration": 246,
                              "type": "struct Patient.patient"
                            },
                            "id": 521,
                            "name": "UserDefinedTypeName",
                            "src": "1386:7:3"
                          }
                        ],
                        "id": 522,
                        "name": "VariableDeclaration",
                        "src": "1386:17:3"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct Patient.patient storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 221,
                              "type": "mapping(address => struct Patient.patient storage ref)",
                              "value": "patients"
                            },
                            "id": 523,
                            "name": "Identifier",
                            "src": "1406:8:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 588,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 524,
                                "name": "Identifier",
                                "src": "1415:3:3"
                              }
                            ],
                            "id": 525,
                            "name": "MemberAccess",
                            "src": "1415:10:3"
                          }
                        ],
                        "id": 526,
                        "name": "IndexAccess",
                        "src": "1406:20:3"
                      }
                    ],
                    "id": 527,
                    "name": "VariableDeclarationStatement",
                    "src": "1386:40:3"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        529
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "d",
                          "scope": 571,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct Doctor.doctor",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "doctor",
                              "referencedDeclaration": 19,
                              "type": "struct Doctor.doctor"
                            },
                            "id": 528,
                            "name": "UserDefinedTypeName",
                            "src": "1436:6:3"
                          }
                        ],
                        "id": 529,
                        "name": "VariableDeclaration",
                        "src": "1436:16:3"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct Doctor.doctor storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 5,
                              "type": "mapping(address => struct Doctor.doctor storage ref)",
                              "value": "doctors"
                            },
                            "id": 530,
                            "name": "Identifier",
                            "src": "1455:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 508,
                              "type": "address",
                              "value": "_doctor"
                            },
                            "id": 531,
                            "name": "Identifier",
                            "src": "1463:7:3"
                          }
                        ],
                        "id": 532,
                        "name": "IndexAccess",
                        "src": "1455:16:3"
                      }
                    ],
                    "id": 533,
                    "name": "VariableDeclarationStatement",
                    "src": "1436:35:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                591,
                                592
                              ],
                              "referencedDeclaration": 591,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 534,
                            "name": "Identifier",
                            "src": "1534:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "<",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "mapping(address => uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 227,
                                          "type": "mapping(address => mapping(address => uint256))",
                                          "value": "patientToDoctor"
                                        },
                                        "id": 535,
                                        "name": "Identifier",
                                        "src": "1542:15:3"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "referencedDeclaration": null,
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 588,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 536,
                                            "name": "Identifier",
                                            "src": "1558:3:3"
                                          }
                                        ],
                                        "id": 537,
                                        "name": "MemberAccess",
                                        "src": "1558:10:3"
                                      }
                                    ],
                                    "id": 538,
                                    "name": "IndexAccess",
                                    "src": "1542:27:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 508,
                                      "type": "address",
                                      "value": "_doctor"
                                    },
                                    "id": 539,
                                    "name": "Identifier",
                                    "src": "1570:7:3"
                                  }
                                ],
                                "id": 540,
                                "name": "IndexAccess",
                                "src": "1542:36:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 541,
                                "name": "Literal",
                                "src": "1581:1:3"
                              }
                            ],
                            "id": 542,
                            "name": "BinaryOperation",
                            "src": "1542:40:3"
                          }
                        ],
                        "id": 543,
                        "name": "FunctionCall",
                        "src": "1534:49:3"
                      }
                    ],
                    "id": 544,
                    "name": "ExpressionStatement",
                    "src": "1534:49:3"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        546
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "idx",
                          "scope": 571,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 545,
                            "name": "ElementaryTypeName",
                            "src": "1704:4:3"
                          }
                        ],
                        "id": 546,
                        "name": "VariableDeclaration",
                        "src": "1704:8:3"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (address) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "doctor_list",
                                  "referencedDeclaration": 245,
                                  "type": "address[] storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 522,
                                      "type": "struct Patient.patient storage pointer",
                                      "value": "p"
                                    },
                                    "id": 547,
                                    "name": "Identifier",
                                    "src": "1715:1:3"
                                  }
                                ],
                                "id": 548,
                                "name": "MemberAccess",
                                "src": "1715:13:3"
                              }
                            ],
                            "id": 549,
                            "name": "MemberAccess",
                            "src": "1715:18:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 508,
                              "type": "address",
                              "value": "_doctor"
                            },
                            "id": 550,
                            "name": "Identifier",
                            "src": "1734:7:3"
                          }
                        ],
                        "id": 551,
                        "name": "FunctionCall",
                        "src": "1715:27:3"
                      }
                    ],
                    "id": 552,
                    "name": "VariableDeclarationStatement",
                    "src": "1704:38:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "mapping(address => uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 227,
                                      "type": "mapping(address => mapping(address => uint256))",
                                      "value": "patientToDoctor"
                                    },
                                    "id": 553,
                                    "name": "Identifier",
                                    "src": "1821:15:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 588,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 554,
                                        "name": "Identifier",
                                        "src": "1837:3:3"
                                      }
                                    ],
                                    "id": 555,
                                    "name": "MemberAccess",
                                    "src": "1837:10:3"
                                  }
                                ],
                                "id": 557,
                                "name": "IndexAccess",
                                "src": "1821:27:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 508,
                                  "type": "address",
                                  "value": "_doctor"
                                },
                                "id": 556,
                                "name": "Identifier",
                                "src": "1849:7:3"
                              }
                            ],
                            "id": 558,
                            "name": "IndexAccess",
                            "src": "1821:36:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 546,
                              "type": "uint256",
                              "value": "idx"
                            },
                            "id": 559,
                            "name": "Identifier",
                            "src": "1860:3:3"
                          }
                        ],
                        "id": 560,
                        "name": "Assignment",
                        "src": "1821:42:3"
                      }
                    ],
                    "id": 561,
                    "name": "ExpressionStatement",
                    "src": "1821:42:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (address) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "patient_list",
                                  "referencedDeclaration": 18,
                                  "type": "address[] storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 529,
                                      "type": "struct Doctor.doctor storage pointer",
                                      "value": "d"
                                    },
                                    "id": 562,
                                    "name": "Identifier",
                                    "src": "1921:1:3"
                                  }
                                ],
                                "id": 565,
                                "name": "MemberAccess",
                                "src": "1921:14:3"
                              }
                            ],
                            "id": 566,
                            "name": "MemberAccess",
                            "src": "1921:19:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 588,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 567,
                                "name": "Identifier",
                                "src": "1941:3:3"
                              }
                            ],
                            "id": 568,
                            "name": "MemberAccess",
                            "src": "1941:10:3"
                          }
                        ],
                        "id": 569,
                        "name": "FunctionCall",
                        "src": "1921:31:3"
                      }
                    ],
                    "id": 570,
                    "name": "ExpressionStatement",
                    "src": "1921:31:3"
                  }
                ],
                "id": 571,
                "name": "Block",
                "src": "1331:628:3"
              }
            ],
            "id": 572,
            "name": "FunctionDefinition",
            "src": "1213:746:3"
          }
        ],
        "id": 573,
        "name": "ContractDefinition",
        "src": "203:1923:3"
      }
    ],
    "id": 574,
    "name": "SourceUnit",
    "src": "0:2126:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-10-31T21:08:16.045Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}