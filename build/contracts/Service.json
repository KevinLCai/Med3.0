{
  "contractName": "Service",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDoctorInfo",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPatientInfo",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        },
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "signupDoctor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_age",
          "type": "uint8"
        }
      ],
      "name": "signupPatient",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        },
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_patient",
          "type": "address"
        }
      ],
      "name": "getPatientInfoForDoctor",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDoctorInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPatientInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_patient\",\"type\":\"address\"}],\"name\":\"getPatientInfoForDoctor\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"signupDoctor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_age\",\"type\":\"uint8\"}],\"name\":\"signupPatient\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Service.sol\":\"Service\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Doctor.sol\":{\"keccak256\":\"0xd396946387c98431d23683efb2d9d79155c5059fee7e32b98bddeaca5ed92e7b\",\"urls\":[\"bzz-raw://25ea8efc7fa8f9cfef4c01ec55b09aff32fa58871d7ff10583a14dd8fd6887da\",\"dweb:/ipfs/QmeKdGGc36XTmY7wDFGQYiGo7gzzUXzHXjpCSLqTsUNEVZ\"]},\"project:/contracts/File.sol\":{\"keccak256\":\"0x599798db51edcd7e66db14b184116567051eebd3fdd9de17779bb5819e0e6653\",\"urls\":[\"bzz-raw://551500f4103da41182be1332ca1bf57bc369ed9eaa442a13f18d9636a794556d\",\"dweb:/ipfs/QmbS16RWny6Z722zLKLeMQs9G6CGtvzrKfsQy1rDBxcZSp\"]},\"project:/contracts/Patient.sol\":{\"keccak256\":\"0x61dbb579c5562d93bb769486318a848fc48c4e96395e0fdeaf91e1f1c1dd0bb9\",\"urls\":[\"bzz-raw://b43eb390eb92ea7d62ef300e542c8985ff577153dece9109b7143b4809d16a63\",\"dweb:/ipfs/Qmd8hweZpYvY1GVGuU17coB8yvFJTPtCqQ5WGdN7Lrj2JQ\"]},\"project:/contracts/Service.sol\":{\"keccak256\":\"0xe581550db116a67a52f6b3c5234ed98f849d0b15d575e3424b5641033da93d4b\",\"urls\":[\"bzz-raw://a10f3ecd82a54649644086eecb11313793e69f00b698952f5d5c95aa1b7e44a0\",\"dweb:/ipfs/QmNmc5dLYhq5e6DQhNfnjuxhGJr8vKuiwtb65PCLqFdJH2\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5033600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612573806100616000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063326df6641461005c5780636459d52f1461017c5780637120203a14610237578063b380f5c614610448578063fe59cc1a14610513575b600080fd5b610064610658565b60405180806020018560ff1660ff1681526020018060200180602001848103845288818151815260200191508051906020019080838360005b838110156100b857808201518184015260208101905061009d565b50505050905090810190601f1680156100e55780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019060200280838360005b83811015610121578082015181840152602081019050610106565b50505050905001848103825285818151815260200191508051906020019060200280838360005b83811015610163578082015181840152602081019050610148565b5050505090500197505050505050505060405180910390f35b6102356004803603602081101561019257600080fd5b81019080803590602001906401000000008111156101af57600080fd5b8201836020820111156101c157600080fd5b803590602001918460018302840111640100000000831117156101e357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610b69565b005b6102fd6004803603604081101561024d57600080fd5b810190808035906020019064010000000081111561026a57600080fd5b82018360208201111561027c57600080fd5b8035906020019184600183028401116401000000008311171561029e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff169060200190929190505050610f35565b60405180806020018660ff1660ff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200180602001848103845289818151815260200191508051906020019080838360005b83811015610383578082015181840152602081019050610368565b50505050905090810190601f1680156103b05780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019060200280838360005b838110156103ec5780820151818401526020810190506103d1565b50505050905001848103825285818151815260200191508051906020019060200280838360005b8381101561042e578082015181840152602081019050610413565b505050509050019850505050505050505060405180910390f35b61045061171c565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b83811015610494578082015181840152602081019050610479565b50505050905090810190601f1680156104c15780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019060200280838360005b838110156104fd5780820151818401526020810190506104e2565b5050505090500194505050505060405180910390f35b6105556004803603602081101561052957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b2a565b60405180806020018560ff1660ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001838103835287818151815260200191508051906020019080838360005b838110156105d75780820151818401526020810190506105bc565b50505050905090810190601f1680156106045780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019060200280838360005b83811015610640578082015181840152602081019050610625565b50505050905001965050505050505060405180910390f35b60606000606080336106686122db565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561074b5780601f106107205761010080835404028352916020019161074b565b820191906000526020600020905b81548152906001019060200180831161072e57829003601f168201915b505050505081526020016001820160009054906101000a900460ff1660ff1660ff1681526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180548060200260200160405190810160405280929190818152602001828054801561081657602002820191906000526020600020905b815481526020019060010190808311610802575b50505050508152602001600382018054806020026020016040519081016040528092919081815260200182805480156108a457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161085a575b5050505050815250509050600073ffffffffffffffffffffffffffffffffffffffff16816040015173ffffffffffffffffffffffffffffffffffffffff16116108ec57600080fd5b6108f46122db565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109d75780601f106109ac576101008083540402835291602001916109d7565b820191906000526020600020905b8154815290600101906020018083116109ba57829003601f168201915b505050505081526020016001820160009054906101000a900460ff1660ff1660ff1681526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805480602002602001604051908101604052809291908181526020018280548015610aa257602002820191906000526020600020905b815481526020019060010190808311610a8e575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020018280548015610b3057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610ae6575b50505050508152505090508060000151816020015182606001518360800151839350819150809050965096509650965050505090919293565b610b71612323565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c535780601f10610c2857610100808354040283529160200191610c53565b820191906000526020600020905b815481529060010190602001808311610c3657829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805480602002602001604051908101604052809291908181526020018280548015610d3757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610ced575b50505050508152505090506040518060000190506040518091039020826040516020018082805190602001908083835b60208310610d8a5780518252602082019150602081019050602083039250610d67565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001201415610dd057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff161115610e0e57600080fd5b60405180606001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff1681526020016000604051908082528060200260200182016040528015610e6b5781602001602082028038833980820191505090505b508152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190610ec992919061235a565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019080519060200190610f2d9291906123da565b509050505050565b6060600080606080610f456122db565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110285780601f10610ffd57610100808354040283529160200191611028565b820191906000526020600020905b81548152906001019060200180831161100b57829003601f168201915b505050505081526020016001820160009054906101000a900460ff1660ff1660ff1681526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054806020026020016040519081016040528092919081815260200182805480156110f357602002820191906000526020600020905b8154815260200190600101908083116110df575b505050505081526020016003820180548060200260200160405190810160405280929190818152602001828054801561118157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611137575b5050505050815250509050600073ffffffffffffffffffffffffffffffffffffffff16816040015173ffffffffffffffffffffffffffffffffffffffff1611156111ca57600080fd5b6040518060000190506040518091039020886040516020018082805190602001908083835b6020831061121257805182526020820191506020810190506020830392506111ef565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120141561125857600080fd5b60008760ff1611801561126e575060788760ff16105b61127757600080fd5b6040518060a001604052808981526020018860ff1681526020013373ffffffffffffffffffffffffffffffffffffffff16815260200160006040519080825280602002602001820160405280156112dd5781602001602082028038833980820191505090505b50815260200160006040519080825280602002602001820160405280156113135781602001602082028038833980820191505090505b50815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908051906020019061137292919061235a565b5060208201518160010160006101000a81548160ff021916908360ff16021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020190805190602001906113f7929190612464565b5060808201518160030190805190602001906114149291906123da565b50905050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301848054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116265780601f106115fb57610100808354040283529160200191611626565b820191906000526020600020905b81548152906001019060200180831161160957829003601f168201915b505050505094508180548060200260200160405190810160405280929190818152602001828054801561167857602002820191906000526020600020905b815481526020019060010190808311611664575b505050505091508080548060200260200160405190810160405280929190818152602001828054801561170057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116116b6575b5050505050905095509550955095509550509295509295909350565b60608033611728612323565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561180a5780601f106117df5761010080835404028352916020019161180a565b820191906000526020600020905b8154815290600101906020018083116117ed57829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054806020026020016040519081016040528092919081815260200182805480156118ee57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116118a4575b5050505050815250509050600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff161161193657600080fd5b61193e612323565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a205780601f106119f557610100808354040283529160200191611a20565b820191906000526020600020905b815481529060010190602001808311611a0357829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805480602002602001604051908101604052809291908181526020018280548015611b0457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611aba575b505050505081525050905080600001518160400151819150809050945094505050509091565b6060600080606084611b3a6122db565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c1d5780601f10611bf257610100808354040283529160200191611c1d565b820191906000526020600020905b815481529060010190602001808311611c0057829003601f168201915b505050505081526020016001820160009054906101000a900460ff1660ff1660ff1681526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805480602002602001604051908101604052809291908181526020018280548015611ce857602002820191906000526020600020905b815481526020019060010190808311611cd4575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020018280548015611d7657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611d2c575b5050505050815250509050600073ffffffffffffffffffffffffffffffffffffffff16816040015173ffffffffffffffffffffffffffffffffffffffff1611611dbe57600080fd5b33611dc7612323565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ea95780601f10611e7e57610100808354040283529160200191611ea9565b820191906000526020600020905b815481529060010190602001808311611e8c57829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805480602002602001604051908101604052809291908181526020018280548015611f8d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611f43575b5050505050815250509050600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff1611611fd557600080fd5b611fdd6122db565b600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120c05780601f10612095576101008083540402835291602001916120c0565b820191906000526020600020905b8154815290600101906020018083116120a357829003601f168201915b505050505081526020016001820160009054906101000a900460ff1660ff1660ff1681526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180548060200260200160405190810160405280929190818152602001828054801561218b57602002820191906000526020600020905b815481526020019060010190808311612177575b505050505081526020016003820180548060200260200160405190810160405280929190818152602001828054801561221957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116121cf575b50505050508152505090506000600360008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116122ad57600080fd5b8060000151816020015182604001518360600151839350809050985098509850985050505050509193509193565b6040518060a0016040528060608152602001600060ff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081525090565b604051806060016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061239b57805160ff19168380011785556123c9565b828001600101855582156123c9579182015b828111156123c85782518255916020019190600101906123ad565b5b5090506123d691906124b1565b5090565b828054828255906000526020600020908101928215612453579160200282015b828111156124525782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906123fa565b5b50905061246091906124d6565b5090565b8280548282559060005260206000209081019282156124a0579160200282015b8281111561249f578251825591602001919060010190612484565b5b5090506124ad9190612519565b5090565b6124d391905b808211156124cf5760008160009055506001016124b7565b5090565b90565b61251691905b8082111561251257600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055506001016124dc565b5090565b90565b61253b91905b8082111561253757600081600090555060010161251f565b5090565b9056fea265627a7a723158209f6df5cbcd3b4267b611a34e2136a6c5832cbd9ee83405206082c53905e0e5d564736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063326df6641461005c5780636459d52f1461017c5780637120203a14610237578063b380f5c614610448578063fe59cc1a14610513575b600080fd5b610064610658565b60405180806020018560ff1660ff1681526020018060200180602001848103845288818151815260200191508051906020019080838360005b838110156100b857808201518184015260208101905061009d565b50505050905090810190601f1680156100e55780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019060200280838360005b83811015610121578082015181840152602081019050610106565b50505050905001848103825285818151815260200191508051906020019060200280838360005b83811015610163578082015181840152602081019050610148565b5050505090500197505050505050505060405180910390f35b6102356004803603602081101561019257600080fd5b81019080803590602001906401000000008111156101af57600080fd5b8201836020820111156101c157600080fd5b803590602001918460018302840111640100000000831117156101e357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610b69565b005b6102fd6004803603604081101561024d57600080fd5b810190808035906020019064010000000081111561026a57600080fd5b82018360208201111561027c57600080fd5b8035906020019184600183028401116401000000008311171561029e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff169060200190929190505050610f35565b60405180806020018660ff1660ff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200180602001848103845289818151815260200191508051906020019080838360005b83811015610383578082015181840152602081019050610368565b50505050905090810190601f1680156103b05780820380516001836020036101000a031916815260200191505b50848103835286818151815260200191508051906020019060200280838360005b838110156103ec5780820151818401526020810190506103d1565b50505050905001848103825285818151815260200191508051906020019060200280838360005b8381101561042e578082015181840152602081019050610413565b505050509050019850505050505050505060405180910390f35b61045061171c565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b83811015610494578082015181840152602081019050610479565b50505050905090810190601f1680156104c15780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019060200280838360005b838110156104fd5780820151818401526020810190506104e2565b5050505090500194505050505060405180910390f35b6105556004803603602081101561052957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b2a565b60405180806020018560ff1660ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001838103835287818151815260200191508051906020019080838360005b838110156105d75780820151818401526020810190506105bc565b50505050905090810190601f1680156106045780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019060200280838360005b83811015610640578082015181840152602081019050610625565b50505050905001965050505050505060405180910390f35b60606000606080336106686122db565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561074b5780601f106107205761010080835404028352916020019161074b565b820191906000526020600020905b81548152906001019060200180831161072e57829003601f168201915b505050505081526020016001820160009054906101000a900460ff1660ff1660ff1681526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180548060200260200160405190810160405280929190818152602001828054801561081657602002820191906000526020600020905b815481526020019060010190808311610802575b50505050508152602001600382018054806020026020016040519081016040528092919081815260200182805480156108a457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161085a575b5050505050815250509050600073ffffffffffffffffffffffffffffffffffffffff16816040015173ffffffffffffffffffffffffffffffffffffffff16116108ec57600080fd5b6108f46122db565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109d75780601f106109ac576101008083540402835291602001916109d7565b820191906000526020600020905b8154815290600101906020018083116109ba57829003601f168201915b505050505081526020016001820160009054906101000a900460ff1660ff1660ff1681526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805480602002602001604051908101604052809291908181526020018280548015610aa257602002820191906000526020600020905b815481526020019060010190808311610a8e575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020018280548015610b3057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610ae6575b50505050508152505090508060000151816020015182606001518360800151839350819150809050965096509650965050505090919293565b610b71612323565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c535780601f10610c2857610100808354040283529160200191610c53565b820191906000526020600020905b815481529060010190602001808311610c3657829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805480602002602001604051908101604052809291908181526020018280548015610d3757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610ced575b50505050508152505090506040518060000190506040518091039020826040516020018082805190602001908083835b60208310610d8a5780518252602082019150602081019050602083039250610d67565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001201415610dd057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff161115610e0e57600080fd5b60405180606001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff1681526020016000604051908082528060200260200182016040528015610e6b5781602001602082028038833980820191505090505b508152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190610ec992919061235a565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019080519060200190610f2d9291906123da565b509050505050565b6060600080606080610f456122db565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110285780601f10610ffd57610100808354040283529160200191611028565b820191906000526020600020905b81548152906001019060200180831161100b57829003601f168201915b505050505081526020016001820160009054906101000a900460ff1660ff1660ff1681526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054806020026020016040519081016040528092919081815260200182805480156110f357602002820191906000526020600020905b8154815260200190600101908083116110df575b505050505081526020016003820180548060200260200160405190810160405280929190818152602001828054801561118157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611137575b5050505050815250509050600073ffffffffffffffffffffffffffffffffffffffff16816040015173ffffffffffffffffffffffffffffffffffffffff1611156111ca57600080fd5b6040518060000190506040518091039020886040516020018082805190602001908083835b6020831061121257805182526020820191506020810190506020830392506111ef565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405280519060200120141561125857600080fd5b60008760ff1611801561126e575060788760ff16105b61127757600080fd5b6040518060a001604052808981526020018860ff1681526020013373ffffffffffffffffffffffffffffffffffffffff16815260200160006040519080825280602002602001820160405280156112dd5781602001602082028038833980820191505090505b50815260200160006040519080825280602002602001820160405280156113135781602001602082028038833980820191505090505b50815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908051906020019061137292919061235a565b5060208201518160010160006101000a81548160ff021916908360ff16021790555060408201518160010160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020190805190602001906113f7929190612464565b5060808201518160030190805190602001906114149291906123da565b50905050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301848054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116265780601f106115fb57610100808354040283529160200191611626565b820191906000526020600020905b81548152906001019060200180831161160957829003601f168201915b505050505094508180548060200260200160405190810160405280929190818152602001828054801561167857602002820191906000526020600020905b815481526020019060010190808311611664575b505050505091508080548060200260200160405190810160405280929190818152602001828054801561170057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116116b6575b5050505050905095509550955095509550509295509295909350565b60608033611728612323565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561180a5780601f106117df5761010080835404028352916020019161180a565b820191906000526020600020905b8154815290600101906020018083116117ed57829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054806020026020016040519081016040528092919081815260200182805480156118ee57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116118a4575b5050505050815250509050600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff161161193657600080fd5b61193e612323565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a205780601f106119f557610100808354040283529160200191611a20565b820191906000526020600020905b815481529060010190602001808311611a0357829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805480602002602001604051908101604052809291908181526020018280548015611b0457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611aba575b505050505081525050905080600001518160400151819150809050945094505050509091565b6060600080606084611b3a6122db565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c1d5780601f10611bf257610100808354040283529160200191611c1d565b820191906000526020600020905b815481529060010190602001808311611c0057829003601f168201915b505050505081526020016001820160009054906101000a900460ff1660ff1660ff1681526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805480602002602001604051908101604052809291908181526020018280548015611ce857602002820191906000526020600020905b815481526020019060010190808311611cd4575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020018280548015611d7657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611d2c575b5050505050815250509050600073ffffffffffffffffffffffffffffffffffffffff16816040015173ffffffffffffffffffffffffffffffffffffffff1611611dbe57600080fd5b33611dc7612323565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ea95780601f10611e7e57610100808354040283529160200191611ea9565b820191906000526020600020905b815481529060010190602001808311611e8c57829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805480602002602001604051908101604052809291908181526020018280548015611f8d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611f43575b5050505050815250509050600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff1611611fd557600080fd5b611fdd6122db565b600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120c05780601f10612095576101008083540402835291602001916120c0565b820191906000526020600020905b8154815290600101906020018083116120a357829003601f168201915b505050505081526020016001820160009054906101000a900460ff1660ff1660ff1681526020016001820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180548060200260200160405190810160405280929190818152602001828054801561218b57602002820191906000526020600020905b815481526020019060010190808311612177575b505050505081526020016003820180548060200260200160405190810160405280929190818152602001828054801561221957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116121cf575b50505050508152505090506000600360008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116122ad57600080fd5b8060000151816020015182604001518360600151839350809050985098509850985050505050509193509193565b6040518060a0016040528060608152602001600060ff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081525090565b604051806060016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061239b57805160ff19168380011785556123c9565b828001600101855582156123c9579182015b828111156123c85782518255916020019190600101906123ad565b5b5090506123d691906124b1565b5090565b828054828255906000526020600020908101928215612453579160200282015b828111156124525782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906123fa565b5b50905061246091906124d6565b5090565b8280548282559060005260206000209081019282156124a0579160200282015b8281111561249f578251825591602001919060010190612484565b5b5090506124ad9190612519565b5090565b6124d391905b808211156124cf5760008160009055506001016124b7565b5090565b90565b61251691905b8082111561251257600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055506001016124dc565b5090565b90565b61253b91905b8082111561253757600081600090555060010161251f565b5090565b9056fea265627a7a723158209f6df5cbcd3b4267b611a34e2136a6c5832cbd9ee83405206082c53905e0e5d564736f6c63430005100032",
  "sourceMap": "203:854:6:-;;;324:55;8:9:-1;5:2;;;30:1;27;20:12;5:2;324:55:6;362:10;354:5;;:18;;;;;;;;;;;;;;;;;;203:854;;;;;;",
  "deployedSourceMap": "203:854:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;203:854:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;938:241:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;938:241:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;938:241:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;938:241:5;;;;;;;;;;;;;;;;;;;;;;772:318:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;772:318:1;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;772:318:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;772:318:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;772:318:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;772:318:1;;;;;;;;;;;;;;;:::i;:::-;;1210:861:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1210:861:5;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1210:861:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1210:861:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1210:861:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1210:861:5;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1210:861:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1210:861:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1210:861:5;;;;;;;;;;;;;;;;;;;;;;;535:197:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;535:197:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;535:197:1;;;;;;;;;;;;;;;;;;;722:333:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;722:333:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;722:333:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;722:333:6;;;;;;;;;;;;;;;;;;;;;938:241:5;1009:13;1024:5;1031:16;1049;989:10;757:16;;:::i;:::-;776:8;:14;785:4;776:14;;;;;;;;;;;;;;;757:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;825:3;808:21;;:1;:6;;;:21;;;800:30;;;;;;1077:16;;:::i;:::-;1096:8;:20;1105:10;1096:20;;;;;;;;;;;;;;;1077:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1134:1;:6;;;1142:1;:5;;;1149:1;:7;;;1158:1;:13;;;1126:46;;;;;;;;;;;;;;;;;;938:241;;;;;;:::o;772:318:1:-;832:15;;:::i;:::-;850:7;:19;858:10;850:19;;;;;;;;;;;;;;;832:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;925:13;;;;;;;;;;;;;;914:5;897:23;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;897:23:1;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;897:23:1;;;887:34;;;;;;:51;;879:60;;;;;;976:3;959:21;;:1;:6;;;:21;;;957:24;949:33;;;;;;1015:68;;;;;;;;1028:5;1015:68;;;;1040:10;1015:68;;;;;;1079:1;1065:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;1065:16:1;;;;1015:68;;;993:7;:19;1001:10;993:19;;;;;;;;;;;;;;;:90;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;772:318;;:::o;1210:861:5:-;1281:13;1296:5;1303:7;1312:16;1330;1409;;:::i;:::-;1428:8;:20;1437:10;1428:20;;;;;;;;;;;;;;;1409:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1553:3;1536:21;;:1;:6;;;:21;;;1534:24;1526:33;;;;;;1683:13;;;;;;;;;;;;;;1672:5;1655:23;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1655:23:5;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1655:23:5;;;1645:34;;;;;;:51;;1637:60;;;;;;1723:1;1716:4;:8;;;1715:26;;;;;1737:3;1730:4;:10;;;1715:26;1707:35;;;;;;1807:98;;;;;;;;1821:5;1807:98;;;;1831:4;1807:98;;;;;;1841:10;1807:98;;;;;;1872:1;1858:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;1858:16:5;;;;1807:98;;;;1901:1;1887:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;1887:16:5;;;;1807:98;;;1784:8;:20;1793:10;1784:20;;;;;;;;;;;;;;;:121;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1923:8;:20;1932:10;1923:20;;;;;;;;;;;;;;;:25;;1950:8;:20;1959:10;1950:20;;;;;;;;;;;;;;;:24;;;;;;;;;;;;1976:8;:20;1985:10;1976:20;;;;;;;;;;;;;;;:25;;;;;;;;;;;;2003:8;:20;2012:10;2003:20;;;;;;;;;;;;;;;:26;;2031:8;:20;2040:10;2031:20;;;;;;;;;;;;;;;:32;;1915:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1210:861;;;;;;;;:::o;535:197:1:-;604:13;619:16;584:10;392:15;;:::i;:::-;410:7;:13;418:4;410:13;;;;;;;;;;;;;;;392:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;458:3;441:21;;:1;:6;;;:21;;;433:30;;;;;;647:15;;:::i;:::-;665:7;:19;673:10;665:19;;;;;;;;;;;;;;;647:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;702:1;:6;;;710:1;:14;;;694:31;;;;;;;;;;;535:197;;;;:::o;722:333:6:-;840:13;856:5;863:7;872:16;798:8;757:16:5;;:::i;:::-;776:8;:14;785:4;776:14;;;;;;;;;;;;;;;757:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;825:3;808:21;;:1;:6;;;:21;;;800:30;;;;;;820:10:6;392:15:1;;:::i;:::-;410:7;:13;418:4;410:13;;;;;;;;;;;;;;;392:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;458:3;441:21;;:1;:6;;;:21;;;433:30;;;;;;900:16:6;;:::i;:::-;919:8;:18;928:8;919:18;;;;;;;;;;;;;;;900:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;996:1;956:15;:25;972:8;956:25;;;;;;;;;;;;;;;:37;982:10;956:37;;;;;;;;;;;;;;;;:41;948:50;;;;;;1017:1;:6;;;1025:1;:5;;;1032:1;:6;;;1040:1;:7;;;1009:39;;;;;;;;;;;;;;;840:1:5;;722:333:6;;;;;;;:::o;203:854::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.4.25 <0.7.0;\n\nimport \"./Doctor.sol\";\nimport \"./Patient.sol\";\nimport \"./File.sol\";\n\n// Service contract, inherits from patient, doctor, file \n// and handles higher-level functionality\ncontract Service is Doctor, Patient, File {\n\t\n    // message sender\n    address private owner;\n    \n    // set owner\n    constructor() public{\n        owner = msg.sender;\n    }\n\n    // make sure that the sender is the owner\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n    \n    // methods to implement: \n    // give access to a doctor, add a file, get patient/doctor info from a file?\n    // want to have checks as well\n\n    // allow doctor to get info about a specific patient\n    function getPatientInfoForDoctor(address _patient) public view checkPatient(_patient) checkDoctor(msg.sender) returns(string memory , uint8, address, bytes32[] memory ){\n        patient memory p = patients[_patient];\n\n        require(patientToDoctor[_patient][msg.sender] > 0);\n\n        return (p.name, p.age, p.addr, p.files);\n    }\n}",
  "sourcePath": "/Users/kevincai/Desktop/UCL/Dartmouth/Classes/SeniorDesignAndImplementationProject/decentralized-health-blockchain/contracts/Service.sol",
  "ast": {
    "absolutePath": "project:/contracts/Service.sol",
    "exportedSymbols": {
      "Service": [
        522
      ]
    },
    "id": 523,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 441,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".25",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:6"
      },
      {
        "absolutePath": "project:/contracts/Doctor.sol",
        "file": "./Doctor.sol",
        "id": 442,
        "nodeType": "ImportDirective",
        "scope": 523,
        "sourceUnit": 138,
        "src": "34:22:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Patient.sol",
        "file": "./Patient.sol",
        "id": 443,
        "nodeType": "ImportDirective",
        "scope": 523,
        "sourceUnit": 440,
        "src": "57:23:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/File.sol",
        "file": "./File.sol",
        "id": 444,
        "nodeType": "ImportDirective",
        "scope": 523,
        "sourceUnit": 189,
        "src": "81:20:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 445,
              "name": "Doctor",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 137,
              "src": "223:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Doctor_$137",
                "typeString": "contract Doctor"
              }
            },
            "id": 446,
            "nodeType": "InheritanceSpecifier",
            "src": "223:6:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 447,
              "name": "Patient",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 439,
              "src": "231:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Patient_$439",
                "typeString": "contract Patient"
              }
            },
            "id": 448,
            "nodeType": "InheritanceSpecifier",
            "src": "231:7:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 449,
              "name": "File",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 188,
              "src": "240:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_File_$188",
                "typeString": "contract File"
              }
            },
            "id": 450,
            "nodeType": "InheritanceSpecifier",
            "src": "240:4:6"
          }
        ],
        "contractDependencies": [
          137,
          188,
          439
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 522,
        "linearizedBaseContracts": [
          522,
          188,
          439,
          137
        ],
        "name": "Service",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 452,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 522,
            "src": "275:21:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 451,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "275:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 460,
              "nodeType": "Block",
              "src": "344:35:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 455,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 452,
                      "src": "354:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 456,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 537,
                        "src": "362:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "362:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "354:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 459,
                  "nodeType": "ExpressionStatement",
                  "src": "354:18:6"
                }
              ]
            },
            "documentation": null,
            "id": 461,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "335:2:6"
            },
            "returnParameters": {
              "id": 454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "344:0:6"
            },
            "scope": 522,
            "src": "324:55:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 471,
              "nodeType": "Block",
              "src": "452:56:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 464,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 537,
                            "src": "470:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "470:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 466,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 452,
                          "src": "484:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "470:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 463,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        540,
                        541
                      ],
                      "referencedDeclaration": 540,
                      "src": "462:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "462:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 469,
                  "nodeType": "ExpressionStatement",
                  "src": "462:28:6"
                },
                {
                  "id": 470,
                  "nodeType": "PlaceholderStatement",
                  "src": "500:1:6"
                }
              ]
            },
            "documentation": null,
            "id": 472,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 462,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "449:2:6"
            },
            "src": "431:77:6",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 520,
              "nodeType": "Block",
              "src": "890:165:6",
              "statements": [
                {
                  "assignments": [
                    494
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 494,
                      "name": "p",
                      "nodeType": "VariableDeclaration",
                      "scope": 520,
                      "src": "900:16:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_patient_$270_memory_ptr",
                        "typeString": "struct Patient.patient"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 493,
                        "name": "patient",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 270,
                        "src": "900:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_patient_$270_storage_ptr",
                          "typeString": "struct Patient.patient"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 498,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 495,
                      "name": "patients",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 245,
                      "src": "919:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_patient_$270_storage_$",
                        "typeString": "mapping(address => struct Patient.patient storage ref)"
                      }
                    },
                    "id": 497,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 496,
                      "name": "_patient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 474,
                      "src": "928:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "919:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_patient_$270_storage",
                      "typeString": "struct Patient.patient storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "900:37:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 500,
                              "name": "patientToDoctor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 251,
                              "src": "956:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 502,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 501,
                              "name": "_patient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 474,
                              "src": "972:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "956:25:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 505,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 503,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 537,
                              "src": "982:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "982:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "956:37:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "996:1:6",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "956:41:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 499,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        540,
                        541
                      ],
                      "referencedDeclaration": 540,
                      "src": "948:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "948:50:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 509,
                  "nodeType": "ExpressionStatement",
                  "src": "948:50:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 510,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 494,
                          "src": "1017:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_patient_$270_memory_ptr",
                            "typeString": "struct Patient.patient memory"
                          }
                        },
                        "id": 511,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 259,
                        "src": "1017:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 512,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 494,
                          "src": "1025:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_patient_$270_memory_ptr",
                            "typeString": "struct Patient.patient memory"
                          }
                        },
                        "id": 513,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "age",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 261,
                        "src": "1025:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 514,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 494,
                          "src": "1032:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_patient_$270_memory_ptr",
                            "typeString": "struct Patient.patient memory"
                          }
                        },
                        "id": 515,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 263,
                        "src": "1032:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 516,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 494,
                          "src": "1040:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_patient_$270_memory_ptr",
                            "typeString": "struct Patient.patient memory"
                          }
                        },
                        "id": 517,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "files",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 266,
                        "src": "1040:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory",
                          "typeString": "bytes32[] memory"
                        }
                      }
                    ],
                    "id": 518,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1016:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_memory_$_t_uint8_$_t_address_$_t_array$_t_bytes32_$dyn_memory_$",
                      "typeString": "tuple(string memory,uint8,address,bytes32[] memory)"
                    }
                  },
                  "functionReturnParameters": 492,
                  "id": 519,
                  "nodeType": "Return",
                  "src": "1009:39:6"
                }
              ]
            },
            "documentation": null,
            "id": 521,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 477,
                    "name": "_patient",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 474,
                    "src": "798:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 478,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 476,
                  "name": "checkPatient",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 291,
                  "src": "785:12:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "785:22:6"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 480,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 537,
                      "src": "820:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "820:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 482,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 479,
                  "name": "checkDoctor",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 57,
                  "src": "808:11:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "808:23:6"
              }
            ],
            "name": "getPatientInfoForDoctor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 474,
                  "name": "_patient",
                  "nodeType": "VariableDeclaration",
                  "scope": 521,
                  "src": "755:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 473,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "755:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "754:18:6"
            },
            "returnParameters": {
              "id": 492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 484,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 521,
                  "src": "840:13:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 483,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "840:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 486,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 521,
                  "src": "856:5:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 485,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "856:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 488,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 521,
                  "src": "863:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 487,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "863:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 491,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 521,
                  "src": "872:16:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 489,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "872:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 490,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "872:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "839:51:6"
            },
            "scope": 522,
            "src": "722:333:6",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 523,
        "src": "203:854:6"
      }
    ],
    "src": "0:1057:6"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/Service.sol",
      "exportedSymbols": {
        "Service": [
          522
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".25",
            "<",
            "0.7",
            ".0"
          ]
        },
        "id": 441,
        "name": "PragmaDirective",
        "src": "0:32:6"
      },
      {
        "attributes": {
          "SourceUnit": 138,
          "absolutePath": "project:/contracts/Doctor.sol",
          "file": "./Doctor.sol",
          "scope": 523,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 442,
        "name": "ImportDirective",
        "src": "34:22:6"
      },
      {
        "attributes": {
          "SourceUnit": 440,
          "absolutePath": "project:/contracts/Patient.sol",
          "file": "./Patient.sol",
          "scope": 523,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 443,
        "name": "ImportDirective",
        "src": "57:23:6"
      },
      {
        "attributes": {
          "SourceUnit": 189,
          "absolutePath": "project:/contracts/File.sol",
          "file": "./File.sol",
          "scope": 523,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 444,
        "name": "ImportDirective",
        "src": "81:20:6"
      },
      {
        "attributes": {
          "contractDependencies": [
            137,
            188,
            439
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            522,
            188,
            439,
            137
          ],
          "name": "Service",
          "scope": 523
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Doctor",
                  "referencedDeclaration": 137,
                  "type": "contract Doctor"
                },
                "id": 445,
                "name": "UserDefinedTypeName",
                "src": "223:6:6"
              }
            ],
            "id": 446,
            "name": "InheritanceSpecifier",
            "src": "223:6:6"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Patient",
                  "referencedDeclaration": 439,
                  "type": "contract Patient"
                },
                "id": 447,
                "name": "UserDefinedTypeName",
                "src": "231:7:6"
              }
            ],
            "id": 448,
            "name": "InheritanceSpecifier",
            "src": "231:7:6"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "File",
                  "referencedDeclaration": 188,
                  "type": "contract File"
                },
                "id": 449,
                "name": "UserDefinedTypeName",
                "src": "240:4:6"
              }
            ],
            "id": 450,
            "name": "InheritanceSpecifier",
            "src": "240:4:6"
          },
          {
            "attributes": {
              "constant": false,
              "name": "owner",
              "scope": 522,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 451,
                "name": "ElementaryTypeName",
                "src": "275:7:6"
              }
            ],
            "id": 452,
            "name": "VariableDeclaration",
            "src": "275:21:6"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 522,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 453,
                "name": "ParameterList",
                "src": "335:2:6"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 454,
                "name": "ParameterList",
                "src": "344:0:6"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 452,
                              "type": "address",
                              "value": "owner"
                            },
                            "id": 455,
                            "name": "Identifier",
                            "src": "354:5:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 537,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 456,
                                "name": "Identifier",
                                "src": "362:3:6"
                              }
                            ],
                            "id": 457,
                            "name": "MemberAccess",
                            "src": "362:10:6"
                          }
                        ],
                        "id": 458,
                        "name": "Assignment",
                        "src": "354:18:6"
                      }
                    ],
                    "id": 459,
                    "name": "ExpressionStatement",
                    "src": "354:18:6"
                  }
                ],
                "id": 460,
                "name": "Block",
                "src": "344:35:6"
              }
            ],
            "id": 461,
            "name": "FunctionDefinition",
            "src": "324:55:6"
          },
          {
            "attributes": {
              "documentation": null,
              "name": "onlyOwner",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 462,
                "name": "ParameterList",
                "src": "449:2:6"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                540,
                                541
                              ],
                              "referencedDeclaration": 540,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 463,
                            "name": "Identifier",
                            "src": "462:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 537,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 464,
                                    "name": "Identifier",
                                    "src": "470:3:6"
                                  }
                                ],
                                "id": 465,
                                "name": "MemberAccess",
                                "src": "470:10:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 452,
                                  "type": "address",
                                  "value": "owner"
                                },
                                "id": 466,
                                "name": "Identifier",
                                "src": "484:5:6"
                              }
                            ],
                            "id": 467,
                            "name": "BinaryOperation",
                            "src": "470:19:6"
                          }
                        ],
                        "id": 468,
                        "name": "FunctionCall",
                        "src": "462:28:6"
                      }
                    ],
                    "id": 469,
                    "name": "ExpressionStatement",
                    "src": "462:28:6"
                  },
                  {
                    "id": 470,
                    "name": "PlaceholderStatement",
                    "src": "500:1:6"
                  }
                ],
                "id": 471,
                "name": "Block",
                "src": "452:56:6"
              }
            ],
            "id": 472,
            "name": "ModifierDefinition",
            "src": "431:77:6"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "getPatientInfoForDoctor",
              "scope": 522,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_patient",
                      "scope": 521,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 473,
                        "name": "ElementaryTypeName",
                        "src": "755:7:6"
                      }
                    ],
                    "id": 474,
                    "name": "VariableDeclaration",
                    "src": "755:16:6"
                  }
                ],
                "id": 475,
                "name": "ParameterList",
                "src": "754:18:6"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 521,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 483,
                        "name": "ElementaryTypeName",
                        "src": "840:6:6"
                      }
                    ],
                    "id": 484,
                    "name": "VariableDeclaration",
                    "src": "840:13:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 521,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint8",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint8",
                          "type": "uint8"
                        },
                        "id": 485,
                        "name": "ElementaryTypeName",
                        "src": "856:5:6"
                      }
                    ],
                    "id": 486,
                    "name": "VariableDeclaration",
                    "src": "856:5:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 521,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 487,
                        "name": "ElementaryTypeName",
                        "src": "863:7:6"
                      }
                    ],
                    "id": 488,
                    "name": "VariableDeclaration",
                    "src": "863:7:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 521,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "bytes32[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "bytes32[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
                            "id": 489,
                            "name": "ElementaryTypeName",
                            "src": "872:7:6"
                          }
                        ],
                        "id": 490,
                        "name": "ArrayTypeName",
                        "src": "872:9:6"
                      }
                    ],
                    "id": 491,
                    "name": "VariableDeclaration",
                    "src": "872:16:6"
                  }
                ],
                "id": 492,
                "name": "ParameterList",
                "src": "839:51:6"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 291,
                      "type": "modifier (address)",
                      "value": "checkPatient"
                    },
                    "id": 476,
                    "name": "Identifier",
                    "src": "785:12:6"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 474,
                      "type": "address",
                      "value": "_patient"
                    },
                    "id": 477,
                    "name": "Identifier",
                    "src": "798:8:6"
                  }
                ],
                "id": 478,
                "name": "ModifierInvocation",
                "src": "785:22:6"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 57,
                      "type": "modifier (address)",
                      "value": "checkDoctor"
                    },
                    "id": 479,
                    "name": "Identifier",
                    "src": "808:11:6"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "member_name": "sender",
                      "referencedDeclaration": null,
                      "type": "address payable"
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 537,
                          "type": "msg",
                          "value": "msg"
                        },
                        "id": 480,
                        "name": "Identifier",
                        "src": "820:3:6"
                      }
                    ],
                    "id": 481,
                    "name": "MemberAccess",
                    "src": "820:10:6"
                  }
                ],
                "id": 482,
                "name": "ModifierInvocation",
                "src": "808:23:6"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        494
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "p",
                          "scope": 520,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct Patient.patient",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "patient",
                              "referencedDeclaration": 270,
                              "type": "struct Patient.patient"
                            },
                            "id": 493,
                            "name": "UserDefinedTypeName",
                            "src": "900:7:6"
                          }
                        ],
                        "id": 494,
                        "name": "VariableDeclaration",
                        "src": "900:16:6"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct Patient.patient storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 245,
                              "type": "mapping(address => struct Patient.patient storage ref)",
                              "value": "patients"
                            },
                            "id": 495,
                            "name": "Identifier",
                            "src": "919:8:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 474,
                              "type": "address",
                              "value": "_patient"
                            },
                            "id": 496,
                            "name": "Identifier",
                            "src": "928:8:6"
                          }
                        ],
                        "id": 497,
                        "name": "IndexAccess",
                        "src": "919:18:6"
                      }
                    ],
                    "id": 498,
                    "name": "VariableDeclarationStatement",
                    "src": "900:37:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                540,
                                541
                              ],
                              "referencedDeclaration": 540,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 499,
                            "name": "Identifier",
                            "src": "948:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "mapping(address => uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 251,
                                          "type": "mapping(address => mapping(address => uint256))",
                                          "value": "patientToDoctor"
                                        },
                                        "id": 500,
                                        "name": "Identifier",
                                        "src": "956:15:6"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 474,
                                          "type": "address",
                                          "value": "_patient"
                                        },
                                        "id": 501,
                                        "name": "Identifier",
                                        "src": "972:8:6"
                                      }
                                    ],
                                    "id": 502,
                                    "name": "IndexAccess",
                                    "src": "956:25:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "referencedDeclaration": null,
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 537,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 503,
                                        "name": "Identifier",
                                        "src": "982:3:6"
                                      }
                                    ],
                                    "id": 504,
                                    "name": "MemberAccess",
                                    "src": "982:10:6"
                                  }
                                ],
                                "id": 505,
                                "name": "IndexAccess",
                                "src": "956:37:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 506,
                                "name": "Literal",
                                "src": "996:1:6"
                              }
                            ],
                            "id": 507,
                            "name": "BinaryOperation",
                            "src": "956:41:6"
                          }
                        ],
                        "id": 508,
                        "name": "FunctionCall",
                        "src": "948:50:6"
                      }
                    ],
                    "id": 509,
                    "name": "ExpressionStatement",
                    "src": "948:50:6"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 492
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "tuple(string memory,uint8,address,bytes32[] memory)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "name",
                              "referencedDeclaration": 259,
                              "type": "string memory"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 494,
                                  "type": "struct Patient.patient memory",
                                  "value": "p"
                                },
                                "id": 510,
                                "name": "Identifier",
                                "src": "1017:1:6"
                              }
                            ],
                            "id": 511,
                            "name": "MemberAccess",
                            "src": "1017:6:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "age",
                              "referencedDeclaration": 261,
                              "type": "uint8"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 494,
                                  "type": "struct Patient.patient memory",
                                  "value": "p"
                                },
                                "id": 512,
                                "name": "Identifier",
                                "src": "1025:1:6"
                              }
                            ],
                            "id": 513,
                            "name": "MemberAccess",
                            "src": "1025:5:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "addr",
                              "referencedDeclaration": 263,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 494,
                                  "type": "struct Patient.patient memory",
                                  "value": "p"
                                },
                                "id": 514,
                                "name": "Identifier",
                                "src": "1032:1:6"
                              }
                            ],
                            "id": 515,
                            "name": "MemberAccess",
                            "src": "1032:6:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "files",
                              "referencedDeclaration": 266,
                              "type": "bytes32[] memory"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 494,
                                  "type": "struct Patient.patient memory",
                                  "value": "p"
                                },
                                "id": 516,
                                "name": "Identifier",
                                "src": "1040:1:6"
                              }
                            ],
                            "id": 517,
                            "name": "MemberAccess",
                            "src": "1040:7:6"
                          }
                        ],
                        "id": 518,
                        "name": "TupleExpression",
                        "src": "1016:32:6"
                      }
                    ],
                    "id": 519,
                    "name": "Return",
                    "src": "1009:39:6"
                  }
                ],
                "id": 520,
                "name": "Block",
                "src": "890:165:6"
              }
            ],
            "id": 521,
            "name": "FunctionDefinition",
            "src": "722:333:6"
          }
        ],
        "id": 522,
        "name": "ContractDefinition",
        "src": "203:854:6"
      }
    ],
    "id": 523,
    "name": "SourceUnit",
    "src": "0:1057:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-10-25T04:50:28.004Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}